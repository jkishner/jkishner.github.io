<?xml version="1.0"?>
<!-- RSS generated by fargo.io on Wed, 06 Aug 2014 14:39:26 GMT -->
<rss version="2.0" xmlns:source="http://source.smallpict.com/2014/07/12/theSourceNamespace.html">
	<channel>
		<title>Jeffrey Kishner</title>
		<link>http://blog.jeffreykishner.com/</link>
		<description></description>
		<pubDate>Wed, 06 Aug 2014 14:39:24 GMT</pubDate>
		<lastBuildDate>Wed, 06 Aug 2014 14:39:26 GMT</lastBuildDate>
		<language>en-us</language>
		<generator>Fargo v1.66</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<webMaster>jk@jeffreykishner.com</webMaster>
		<source:account service="twitter">kishner</source:account>
		<source:account service="facebook">jeffreykishner</source:account>
		<item>
			<title>River 4</title>
			<link>http://blog.jeffreykishner.com/2014/08/05/river4.html</link>
			<description>
				&lt;p&gt;I got Dave Winer's &lt;a href=&quot;https://github.com/scripting/river4&quot;&gt;River 4&lt;/a&gt; to work on my Linux VPS. You can see it &lt;a href=&quot;http://river.jeffreykishner.com&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I know next to nothing about node.js; I managed to install it, as well as &lt;em&gt;npm&lt;/em&gt; and an app called &lt;em&gt;forever&lt;/em&gt; that will run river.js in the background. (Thanks to &lt;a href=&quot;http://scriven.chrisdadswell.co.uk/articles/howToSetupAFargoRiverOfNews.html&quot;&gt;Chris Dadswell&lt;/a&gt; and &lt;a href=&quot;http://blog.andrewshell.org/running-river4-with-forever/&quot;&gt;Andrew Shell&lt;/a&gt; for their blog posts about this.)&lt;/p&gt;

&lt;p&gt;If you know enough to install apps in Linux, grab the above, clone river 4 via git, and run &lt;code&gt;node river.js&lt;/code&gt; from within the river4 folder. If everything works, you can run &lt;code&gt;forever start river.js&lt;/code&gt; in the background.&lt;/p&gt;

&lt;p&gt;Honestly, the hardest part was getting my Amazon S3 bucket to work. I learned via Stack Overflow that in order to map river.jeffreykishner.com via CNAME to my bucket, I had to name the &lt;em&gt;bucket&lt;/em&gt; river.jeffreykishner.com. That was the only major hurdle.&lt;/p&gt;

&lt;p&gt;I also learned that I needed to store the three environmental variables in .bashrc so that they would stay permanent.&lt;/p&gt;

&lt;p&gt;The cool thing about River 4 is that one can &lt;a href=&quot;http://river4.smallpict.com/2014/06/17/river4V088.html&quot;&gt;use &lt;em&gt;include&lt;/em&gt; to reference an OPML file that is not stored in your S3 bucket&lt;/a&gt;. As an experiment, I uploaded an OPML file that includes a link to an OPML file hosted in &lt;a href=&quot;http://fargo.io&quot;&gt;Fargo&lt;/a&gt;. Sure enough, the feeds in the OPML file in Fargo appear in my river, so in the future, all I have to do is add a new feed to my list in Fargo instead of having to re-upload an OPML file to Amazon everytime I want to add a new feed to a tab. &lt;/p&gt;
				</description>
			<source:outline text="River 4" created="Tue, 05 Aug 2014 20:47:10 GMT" type="outline" name="river4" >
				<source:outline text="I got Dave Winer's [River 4](https://github.com/scripting/river4) to work on my Linux VPS. You can see it [here](http://river.jeffreykishner.com). " created="Tue, 05 Aug 2014 20:47:27 GMT" />
				<source:outline text="I know next to nothing about node.js; I managed to install it, as well as _npm_ and an app called _forever_ that will run river.js in the background. (Thanks to [Chris Dadswell](http://scriven.chrisdadswell.co.uk/articles/howToSetupAFargoRiverOfNews.html) and [Andrew Shell](http://blog.andrewshell.org/running-river4-with-forever/) for their blog posts about this.)" created="Tue, 05 Aug 2014 20:48:27 GMT" />
				<source:outline text="If you know enough to install apps in Linux, grab the above, clone river 4 via git, and run `node river.js` from within the river4 folder. If everything works, you can run `forever start river.js` in the background." created="Tue, 05 Aug 2014 20:52:14 GMT" />
				<source:outline text="Honestly, the hardest part was getting my Amazon S3 bucket to work. I learned via Stack Overflow that in order to map river.jeffreykishner.com via CNAME to my bucket, I had to name the _bucket_ river.jeffreykishner.com. That was the only major hurdle." created="Tue, 05 Aug 2014 20:54:17 GMT" />
				<source:outline text="I also learned that I needed to store the three environmental variables in .bashrc so that they would stay permanent." created="Tue, 05 Aug 2014 20:59:17 GMT" />
				<source:outline text="The cool thing about River 4 is that one can [use _include_ to reference an OPML file that is not stored in your S3 bucket](http://river4.smallpict.com/2014/06/17/river4V088.html). As an experiment, I uploaded an OPML file that includes a link to an OPML file hosted in [Fargo](http://fargo.io). Sure enough, the feeds in the OPML file in Fargo appear in my river, so in the future, all I have to do is add a new feed to my list in Fargo instead of having to re-upload an OPML file to Amazon everytime I want to add a new feed to a tab. " created="Tue, 05 Aug 2014 20:55:30 GMT" />
				</source:outline>
			<pubDate>Tue, 05 Aug 2014 20:47:10 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/08/05/river4.html</guid>
			</item>
		<item>
			<title>Command Line Script to Make Your iPhone Dial a Number</title>
			<link>http://blog.jeffreykishner.com/2014/07/24/commandLineScriptToMakeYourIphoneDialANumber.html</link>
			<description>
				&lt;p&gt;This is a bash script that only requires a single command in Terminal and a single swipe on your iPhone to make a phone call. It is an adaptation of my &lt;a href=&quot;http://blog.jeffreykishner.com/2014/05/23/sendTextAndAnActionToDraftsForIosFromTheCommandLine.html&quot;&gt;command line Pushover script&lt;/a&gt;, so please review that before proceeding below.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code&gt;callhome&lt;/code&gt; at /usr/local/bin with the following contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/bash

message=&quot;tel:8005551212&quot;

action=&quot;Call Home&quot;

url_title=&quot;Make the Call&quot;

curl -s \

  -F &quot;token=$APP_TOKEN&quot; \

  -F &quot;user=$USER_KEY&quot; \

  -F &quot;title=$action&quot; \

  -F &quot;message=$message&quot; \

  -F &quot;url_title=$url_title&quot; \

  -F &quot;url=tel:8005551212&quot; \

  https://api.pushover.net/1/messages.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace the two instances of &lt;code&gt;8005551212&lt;/code&gt; with a phone number, and $APP_TOKEN and $USER_KEY with your app token and user key.&lt;/p&gt;

&lt;p&gt;Make the script executable: &lt;code&gt;chmod +x callhome&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now all you have to do is type &lt;code&gt;callhome&lt;/code&gt; from the command line. When you get a notification on your iPhone, swipe it. Pushover will open the supplementary URL, which will dial the number.&lt;/p&gt;
				</description>
			<source:outline text="Command Line Script to Make Your iPhone Dial a Number" created="Thu, 24 Jul 2014 18:32:12 GMT" type="outline" name="commandLineScriptToMakeYourIphoneDialANumber" >
				<source:outline text="This is a bash script that only requires a single command in Terminal and a single swipe on your iPhone to make a phone call. It is an adaptation of my [command line Pushover script](http://blog.jeffreykishner.com/2014/05/23/sendTextAndAnActionToDraftsForIosFromTheCommandLine.html), so please review that before proceeding below." created="Thu, 24 Jul 2014 18:32:33 GMT" />
				<source:outline text="Create a file called `callhome` at /usr/local/bin with the following contents:" created="Thu, 24 Jul 2014 18:36:37 GMT" />
				<source:outline text="    #! /bin/bash" />
				<source:outline text="    message=&quot;tel:8005551212&quot;" />
				<source:outline text="    action=&quot;Call Home&quot;" />
				<source:outline text="    url_title=&quot;Make the Call&quot;" />
				<source:outline text="    curl -s \" />
				<source:outline text="      -F &quot;token=$APP_TOKEN&quot; \" />
				<source:outline text="      -F &quot;user=$USER_KEY&quot; \" />
				<source:outline text="      -F &quot;title=$action&quot; \" />
				<source:outline text="      -F &quot;message=$message&quot; \" />
				<source:outline text="      -F &quot;url_title=$url_title&quot; \" />
				<source:outline text="      -F &quot;url=tel:8005551212&quot; \" />
				<source:outline text="      https://api.pushover.net/1/messages.json" />
				<source:outline text="Replace the two instances of `8005551212` with a phone number, and $APP_TOKEN and $USER_KEY with your app token and user key." created="Thu, 24 Jul 2014 18:37:23 GMT" />
				<source:outline text="Make the script executable: `chmod +x callhome`." created="Thu, 24 Jul 2014 18:36:31 GMT" />
				<source:outline text="Now all you have to do is type `callhome` from the command line. When you get a notification on your iPhone, swipe it. Pushover will open the supplementary URL, which will dial the number." created="Thu, 24 Jul 2014 18:39:34 GMT" />
				</source:outline>
			<pubDate>Thu, 24 Jul 2014 18:32:12 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/24/commandLineScriptToMakeYourIphoneDialANumber.html</guid>
			</item>
		<item>
			<title>OPML-WordPress Plugin Now Supports Emoji</title>
			<link>http://blog.jeffreykishner.com/2014/07/23/opmlwordpressPluginNowSupportsEmoji.html</link>
			<description>
				&lt;p&gt;If you include emoji in your Fargo blog (using the &lt;a href=&quot;http://www.emoji-cheat-sheet.com/&quot;&gt;Emoji Cheat Sheet&lt;/a&gt; format), they will render on your WordPress page in the latest update to my &lt;a href=&quot;http://jeffreykishner.com/wordpress-plugins/post-opml-to-wordpress/&quot;&gt;plugin&lt;/a&gt;.&lt;/p&gt;
				</description>
			<source:outline text="OPML-WordPress Plugin Now Supports Emoji" created="Wed, 23 Jul 2014 19:58:38 GMT" type="outline" >
				<source:outline text="If you include emoji in your Fargo blog (using the [Emoji Cheat Sheet](http://www.emoji-cheat-sheet.com/) format), they will render on your WordPress page in the latest update to my [plugin](http://jeffreykishner.com/wordpress-plugins/post-opml-to-wordpress/)." created="Wed, 23 Jul 2014 19:58:55 GMT" />
				</source:outline>
			<pubDate>Wed, 23 Jul 2014 19:58:38 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/23/opmlwordpressPluginNowSupportsEmoji.html</guid>
			</item>
		<item>
			<title>Word Crimes</title>
			<link>http://blog.jeffreykishner.com/2014/07/18/wordCrimes.html</link>
			<description>
				&lt;p&gt;Of all the Weird Al videos that have been released so far over his 8-day streak, this one is my favorite. It's clever and well-animated. &lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/8Gv0H-vPoDc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
				</description>
			<source:outline text="Word Crimes" created="Fri, 18 Jul 2014 13:41:18 GMT" type="outline" >
				<source:outline text="Of all the Weird Al videos that have been released so far over his 8-day streak, this one is my favorite. It's clever and well-animated. " created="Fri, 18 Jul 2014 13:41:22 GMT" />
				<source:outline text="&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/8Gv0H-vPoDc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;" created="Fri, 18 Jul 2014 13:43:13 GMT" />
				</source:outline>
			<pubDate>Fri, 18 Jul 2014 13:41:18 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/18/wordCrimes.html</guid>
			</item>
		<item>
			<title>Pushbullet: Communicate Between Your Phone and Your Computer (As Long as You Live in GoogleLand)</title>
			<link>http://blog.jeffreykishner.com/2014/07/11/pushbulletCommunicateBetweenYourPhoneAndYourComputerAsLongAsYouLiveInGoogleland.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://www.pushbullet.com/#&quot;&gt;Pushbullet&lt;/a&gt; is the best service I've seen so far that will allow me to push info from my phone to my work computer and vice versa. (I cannot install &lt;a href=&quot;http://danilo.to/command-c&quot;&gt;Command-C&lt;/a&gt; at the office.) I installed the Chrome extension and the iPhone app. From the Chrome extension, I can push a note or a list to the iOS app. This in itself is unremarkable -- I use &lt;a href=&quot;https://pushover.net/&quot;&gt;Pushover&lt;/a&gt; all the time for that. But the killer feature is that I can send a link to my phone, and the moment I swipe the notification, that URL will open in the Chrome browser. And if I send an address to my iPhone, after I swipe the notification Google Maps will open to that location.  &lt;/p&gt;

&lt;p&gt;Also, I can quickly send the clipboard contents on my iPhone to the desktop extension. This is a lot faster than emailing text to myself or uploading it to Dropbox via &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt; or &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;IFTTT&lt;/h4&gt;

&lt;p&gt;There's an &lt;a href=&quot;https://ifttt.com/pushbullet&quot;&gt;IFTTT channel&lt;/a&gt; that allows you to push a note, link, file or address to your iPhone. I haven't played around with this, but there are many shared recipes for the channel, and I imagine you can create a recipe to automatically send images from a feed to your device.&lt;/p&gt;

&lt;h4&gt;URL Schemes&lt;/h4&gt;

&lt;p&gt;Pushbullet has &lt;a href=&quot;http://docs.pushbullet.com/iphone/&quot;&gt;URL schemes&lt;/a&gt;. &lt;a href=&quot;http://www.bachyaproductions.com/ios-url-actions-the-up-to-date-guide/&quot;&gt;Bachya&lt;/a&gt; wrote this bookmarklet to send the current page in your iOS web browser to the Pushbullet app:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javascript:window.location='pushbullet://compose?type=link&amp;amp;title=' + encodeURIComponent(document.title) + '&amp;amp;url=' + encodeURIComponent(window.location)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;The Only Downside: Google&lt;/h3&gt;

&lt;p&gt;I've been working to become less reliant on Google -- for example, &lt;a href=&quot;http://blog.jeffreykishner.com/2013/08/22/anotherPersonMovingToFastmailfm.html&quot;&gt;moving to Fastmail.fm&lt;/a&gt;. With Pushbullet, you can only sign in with Google, and you have no choice but to open links and addresses in Google Chrome and Google Maps. Granted, their iOS maps app is my default, and I use Chrome for Mac at work, but I still would prefer to have a &lt;em&gt;choice&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;Pushbullet vs. Pushover&lt;/h3&gt;

&lt;p&gt;I have been using my &lt;a href=&quot;http://blog.jeffreykishner.com/2014/05/23/sendTextAndAnActionToDraftsForIosFromTheCommandLine.html&quot;&gt;Pushover command line script&lt;/a&gt; to send text to my phone, and after a recent release, now a swipe of a &lt;a href=&quot;https://pushover.net/&quot;&gt;Pushover&lt;/a&gt; notification will open a supplementary URL (if available). This is great, because I can execute Drafts actions with a swipe of a notification. For example I can make my message an URL and the Drafts action &quot;launch url&quot; (which is just &lt;code&gt;launch://?url=[[draft]]&lt;/code&gt;). This will open a link in Safari for iOS with a single swipe. However, it is definitely less work for me to just open the Pushbullet extension and send a link to my phone that way.  &lt;/p&gt;

&lt;p&gt;I will continue to use my Pushover script to execute actions in Drafts, but Pushbullet is more convenient if I just want to quickly send text or a link to my phone.&lt;/p&gt;
				</description>
			<source:outline text="Pushbullet: Communicate Between Your Phone and Your Computer (As Long as You Live in GoogleLand)" created="Fri, 11 Jul 2014 17:21:20 GMT" type="outline" name="pushbulletCommunicateBetweenYourPhoneAndYourComputerAsLongAsYouLiveInGoogleland" >
				<source:outline text="[Pushbullet](https://www.pushbullet.com/#) is the best service I've seen so far that will allow me to push info from my phone to my work computer and vice versa. (I cannot install [Command-C](http://danilo.to/command-c) at the office.) I installed the Chrome extension and the iPhone app. From the Chrome extension, I can push a note or a list to the iOS app. This in itself is unremarkable -- I use &quot;Pushover&quot; all the time for that. But the killer feature is that I can send a link to my phone, and the moment I swipe the notification, that URL will open in the Chrome browser. And if I send an address to my iPhone, after I swipe the notification Google Maps will open to that location.  " created="Fri, 11 Jul 2014 17:22:09 GMT" />
				<source:outline text="Also, I can quickly send the clipboard contents on my iPhone to the desktop extension. This is a lot faster than emailing text to myself or uploading it to Dropbox via &quot;Drafts&quot; or &quot;Launch Center Pro&quot;." created="Fri, 11 Jul 2014 17:27:53 GMT" />
				<source:outline text="#### IFTTT" created="Wed, 16 Jul 2014 17:02:57 GMT" />
				<source:outline text="There's an [IFTTT channel](https://ifttt.com/pushbullet) that allows you to push a note, link, file or address to your iPhone. I haven't played around with this, but there are many shared recipes for the channel, and I imagine you can create a recipe to automatically send images from a feed to your device." created="Fri, 11 Jul 2014 17:27:53 GMT" />
				<source:outline text="#### URL Schemes" created="Wed, 16 Jul 2014 17:03:21 GMT" />
				<source:outline text="Pushbullet has [URL schemes](http://docs.pushbullet.com/iphone/). [Bachya](http://www.bachyaproductions.com/ios-url-actions-the-up-to-date-guide/) wrote this bookmarklet to send the current page in your iOS web browser to the Pushbullet app:" created="Tue, 15 Jul 2014 14:30:02 GMT" />
				<source:outline text="    javascript:window.location='pushbullet://compose?type=link&amp;title=' + encodeURIComponent(document.title) + '&amp;url=' + encodeURIComponent(window.location)" created="Tue, 15 Jul 2014 14:31:39 GMT" />
				<source:outline text="### The Only Downside: Google" created="Wed, 16 Jul 2014 17:03:52 GMT" />
				<source:outline text="I've been working to become less reliant on Google -- for example, [moving to Fastmail.fm](http://blog.jeffreykishner.com/2013/08/22/anotherPersonMovingToFastmailfm.html). With Pushbullet, you can only sign in with Google, and you have no choice but to open links and addresses in Google Chrome and Google Maps. Granted, their iOS maps app is my default, and I use Chrome for Mac at work, but I still would prefer to have a _choice_." created="Fri, 11 Jul 2014 17:27:53 GMT" />
				<source:outline text="### Pushbullet vs. Pushover" created="Wed, 16 Jul 2014 17:04:57 GMT" />
				<source:outline text="I have been using my [Pushover command line script](http://blog.jeffreykishner.com/2014/05/23/sendTextAndAnActionToDraftsForIosFromTheCommandLine.html) to send text to my phone, and after a recent release, now a swipe of a &quot;Pushover&quot; notification will open a supplementary URL (if available). This is great, because I can execute Drafts actions with a swipe of a notification. For example I can make my message an URL and the Drafts action &quot;launch url&quot; (which is just `launch://?url=[[draft]]`). This will open a link in Safari for iOS with a single swipe. However, it is definitely less work for me to just open the Pushbullet extension and send a link to my phone that way.  " created="Fri, 11 Jul 2014 17:39:25 GMT" />
				<source:outline text="I will continue to use my Pushover script to execute actions in Drafts, but Pushbullet is more convenient if I just want to quickly send text or a link to my phone." created="Wed, 16 Jul 2014 17:06:22 GMT" />
				</source:outline>
			<pubDate>Fri, 11 Jul 2014 17:21:20 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/11/pushbulletCommunicateBetweenYourPhoneAndYourComputerAsLongAsYouLiveInGoogleland.html</guid>
			</item>
		<item>
			<title>Three Types of Lists</title>
			<link>http://blog.jeffreykishner.com/2014/07/11/threeTypesOfLists.html</link>
			<description>
				&lt;p&gt;I am constantly fidgeting with my productivity apps and system. I was engaged to &lt;a href=&quot;http://www.crushapps.com/paperless/&quot;&gt;Paperless&lt;/a&gt; for many months, but now I am playing with &lt;a href=&quot;http://todotxt.com/&quot;&gt;Todo.txt&lt;/a&gt; on the command line and on iOS. As a result, I've been thinking about types of lists and the most appropriate apps for each type of list. &lt;/p&gt;

&lt;h3&gt;1. Actionable Tasks&lt;/h3&gt;

&lt;p&gt;These lists include only tasks that require a physical (measurable/observable) action to mark as complete. This is what the GTD system is all about. Over the years I have used Omnifocus, TaskPaper, Paperless, and now Todo.txt. I have found that -- for me -- text-file-based apps are the best (TaskPaper, Todo.txt). They both support tags/contexts (the @ sign) and projects (the + sign in Todo.txt; a string followed by a : for TaskPaper). I can open them in any text editor, or I can manipulate the text in supported apps. (Jesse Grosjean removed his &lt;a href=&quot;http://www.hogbaysoftware.com/products/taskpaper&quot;&gt;TaskPaper&lt;/a&gt; app from the iOS App Store, but fortunately Ole Zorn created an excellent TaskPaper module for &lt;a href=&quot;http://omz-software.com/editorial/&quot;&gt;Editorial&lt;/a&gt;.)&lt;/p&gt;

&lt;h4&gt;1a. Actionable Tasks With &quot;Hard&quot; Due Dates&lt;/h4&gt;

&lt;p&gt;Some actionable tasks need to be done at a very specific time, or &lt;em&gt;by&lt;/em&gt; a very specific time. &quot;Mail the DVD at 8:30am&quot; or &quot;Go to Trader Joe's at 6pm.&quot; These I put in &lt;a href=&quot;http://www.dueapp.com/&quot;&gt;Due&lt;/a&gt; or Fantastical/iOS Reminders. &lt;/p&gt;

&lt;h3&gt;2. &quot;Consumption&quot; Lists&lt;/h3&gt;

&lt;p&gt;These are items that I want to consume: books, movies, music tracks, groceries. None of this is urgent (well, except for food). These items do require checkboxes, because once I've rented/downloaded/borrowed/purchased the item, I don't need to do it again (... except for food).  I am still using Paperless for this, because the app provides a note field where I can include all the meta info I need (URLs, for example, or who suggested a particular book). And in Paperless, I can uncheck a grocery item to re-add it to my shopping list.&lt;/p&gt;

&lt;h3&gt;3. Ideas Lists&lt;/h3&gt;

&lt;p&gt;I have a list that is more-or-less called, &quot;Things I Need to Remember to Do at Home to Avoid the Wrath of My Wife.&quot; Another is &quot;Lunch Ideas.&quot; These items should not have checkboxes, because they are reference materials, not one-time (or even recurring) tasks. Right now I have these lists in &lt;a href=&quot;http://listaryapp.com/&quot;&gt;Listary&lt;/a&gt; which pulls notes with a specific tag from &lt;a href=&quot;http://simplenote.com/&quot;&gt;Simplenote&lt;/a&gt;. You can toggle a setting for a list in Paperless to remove checkboxes and just use the list as a reference. I have also used &lt;a href=&quot;http://carbonfin.com/&quot;&gt;Carbonfin Outliner&lt;/a&gt; with the checkboxes toggled off for these types of lists.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Of course, one can store &lt;em&gt;all&lt;/em&gt; these lists in simple text files and store them in a single directory. &lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;nvAlt&lt;/a&gt; fans do this. But am I either in front of my phone or a work computer, and I cannot sync Dropbox at work. (One can sync an nvAlt folder with Dropbox.) Although I feel too spread out with my various list apps, I do believe that the ultimate test is whether my system supports both &quot;brain dump&quot; and &quot;information access.&quot; Can I quickly note down an idea or todo? And can I easily find it later? Part of my problem is that I don't always recall where I put a todo. With this three-part categorical division, I hope I can better recall a todo's location. If it's actionable, it's in Todo.txt or iOS Reminders; if it's about something I want to buy, it's in Paperless; if it's an evergreen list, it's in Listary. We'll see how it goes.&lt;/p&gt;
				</description>
			<source:outline text="Three Types of Lists" created="Fri, 11 Jul 2014 14:59:17 GMT" type="outline" name="threeTypesOfLists" >
				<source:outline text="I am constantly fidgeting with my productivity apps and system. I was engaged to &quot;Paperless&quot; for many months, but now I am playing with &quot;Todo.txt&quot; on the command line and on iOS. As a result, I've been thinking about types of lists and the most appropriate apps for each type of list. " created="Fri, 11 Jul 2014 14:59:21 GMT" />
				<source:outline text="### 1. Actionable Tasks" created="Fri, 11 Jul 2014 15:01:49 GMT" />
				<source:outline text="These lists include only tasks that require a physical (measurable/observable) action to mark as complete. This is what the GTD system is all about. Over the years I have used Omnifocus, TaskPaper, Paperless, and now Todo.txt. I have found that -- for me -- text-file-based apps are the best (TaskPaper, Todo.txt). They both support tags/contexts (the @ sign) and projects (the + sign in Todo.txt; a string followed by a : for TaskPaper). I can open them in any text editor, or I can manipulate the text in supported apps. (Jesse Grosjean removed his &quot;TaskPaper&quot; app from the iOS App Store, but fortunately Ole Zorn created an excellent TaskPaper module for &quot;Editorial&quot;.)" created="Fri, 11 Jul 2014 15:02:03 GMT" />
				<source:outline text="#### 1a. Actionable Tasks With &quot;Hard&quot; Due Dates" created="Tue, 15 Jul 2014 14:24:33 GMT" />
				<source:outline text="Some actionable tasks need to be done at a very specific time, or _by_ a very specific time. &quot;Mail the DVD at 8:30am&quot; or &quot;Go to Trader Joe's at 6pm.&quot; These I put in &quot;Due App&quot; or Fantastical/iOS Reminders. " created="Tue, 15 Jul 2014 14:25:05 GMT" />
				<source:outline text="### 2. &quot;Consumption&quot; Lists" created="Fri, 11 Jul 2014 15:20:41 GMT" />
				<source:outline text="These are items that I want to consume: books, movies, music tracks, groceries. None of this is urgent (well, except for food). These items do require checkboxes, because once I've rented/downloaded/borrowed/purchased the item, I don't need to do it again (... except for food).  I am still using Paperless for this, because the app provides a note field where I can include all the meta info I need (URLs, for example, or who suggested a particular book). And in Paperless, I can uncheck a grocery item to re-add it to my shopping list." created="Fri, 11 Jul 2014 15:20:59 GMT" />
				<source:outline text="### 3. Ideas Lists" created="Fri, 11 Jul 2014 15:23:25 GMT" />
				<source:outline text="I have a list that is more-or-less called, &quot;Things I Need to Remember to Do at Home to Avoid the Wrath of My Wife.&quot; Another is &quot;Lunch Ideas.&quot; These items should not have checkboxes, because they are reference materials, not one-time (or even recurring) tasks. Right now I have these lists in &quot;Listary&quot; which pulls notes with a specific tag from &quot;Simplenote&quot;. You can toggle a setting for a list in Paperless to remove checkboxes and just use the list as a reference. I have also used [Carbonfin Outliner](http://carbonfin.com/) with the checkboxes toggled off for these types of lists." created="Fri, 11 Jul 2014 15:23:34 GMT" />
				<source:outline text="***" created="Fri, 11 Jul 2014 16:45:38 GMT" />
				<source:outline text="Of course, one can store _all_ these lists in simple text files and store them in a single directory. [nvAlt](http://brettterpstra.com/projects/nvalt/) fans do this. But am I either in front of my phone or a work computer, and I cannot sync Dropbox at work. (One can sync an nvAlt folder with Dropbox.) Although I feel too spread out with my various list apps, I do believe that the ultimate test is whether my system supports both &quot;brain dump&quot; and &quot;information access.&quot; Can I quickly note down an idea or todo? And can I easily find it later? Part of my problem is that I don't always recall where I put a todo. With this three-part categorical division, I hope I can better recall a todo's location. If it's actionable, it's in Todo.txt or iOS Reminders; if it's about something I want to buy, it's in Paperless; if it's an evergreen list, it's in Listary. We'll see how it goes." created="Fri, 11 Jul 2014 16:46:08 GMT" />
				</source:outline>
			<pubDate>Fri, 11 Jul 2014 14:59:17 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/11/threeTypesOfLists.html</guid>
			</item>
		<item>
			<title>Podcast About URL Schemes</title>
			<link>http://blog.jeffreykishner.com/2014/07/11/podcastAboutUrlSchemes.html</link>
			<description>
				&lt;p&gt;If you're trying to wrap your head around url schemes, encoding and x-callback-url, listen to this &lt;a href=&quot;http://www.pocketsizedpodcast.com/2014/04/psp152/&quot;&gt;excellent podcast&lt;/a&gt; in which the hosts of Pocket Sized Podcast interview Alex Guyot.&lt;/p&gt;

&lt;p&gt;Here's &lt;a href=&quot;http://www.pocketsizedpodcast.com/podcast/psp/PSP-152.m4a&quot;&gt;the link to the .m4a file&lt;/a&gt;.&lt;/p&gt;
				</description>
			<source:outline text="Podcast About URL Schemes" created="Fri, 11 Jul 2014 13:48:55 GMT" type="outline" name="podcastAboutUrlSchemes" >
				<source:outline text="If you're trying to wrap your head around url schemes, encoding and x-callback-url, listen to this [excellent podcast](http://www.pocketsizedpodcast.com/2014/04/psp152/) in which the hosts of Pocket Sized Podcast interview Alex Guyot." created="Fri, 11 Jul 2014 13:49:07 GMT" />
				<source:outline text="Here's [the link to the .m4a file](http://www.pocketsizedpodcast.com/podcast/psp/PSP-152.m4a)." created="Fri, 11 Jul 2014 13:49:11 GMT" />
				</source:outline>
			<pubDate>Fri, 11 Jul 2014 13:48:55 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/11/podcastAboutUrlSchemes.html</guid>
			</item>
		<item>
			<title>The Meaning of Favoriting a Tweet</title>
			<link>http://blog.jeffreykishner.com/2014/07/10/theMeaningOfFavoritingATweet.html</link>
			<description>
				&lt;p&gt;I recently created an &lt;a href=&quot;http://ifttt.com&quot;&gt;IFTTT&lt;/a&gt; recipe to add the first url mentioned in a tweet to Instapaper if I favorite the tweet. Now I am concerned that someone will interpret my favorite as condoning the content of a tweet, whereas all it means is that I want to &quot;read it later.&quot; A favorite is not the equivalent of a &lt;i class=&quot;fa fa-thumbs-o-up&quot;&gt;&lt;/i&gt; on Facebook.&lt;/p&gt;
				</description>
			<source:outline text="The Meaning of Favoriting a Tweet" created="Thu, 10 Jul 2014 21:02:39 GMT" type="outline" >
				<source:outline text="I recently created an [IFTTT](http://ifttt.com) recipe to add the first url mentioned in a tweet to Instapaper if I favorite the tweet. Now I am concerned that someone will interpret my favorite as condoning the content of a tweet, whereas all it means is that I want to &quot;read it later.&quot; A favorite is not the equivalent of a &lt;i class=&quot;fa fa-thumbs-o-up&quot;&gt;&lt;/i&gt; on Facebook." created="Thu, 10 Jul 2014 21:02:45 GMT" />
				</source:outline>
			<pubDate>Thu, 10 Jul 2014 21:02:39 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/10/theMeaningOfFavoritingATweet.html</guid>
			</item>
		<item>
			<title>2nd Update to My LCP Todo.txt Action: Now With Priorities</title>
			<link>http://blog.jeffreykishner.com/2014/07/10/2ndUpdateToMyLcpTodotxtActionNowWithPriorities.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;http://twitter.com/kishner&quot;&gt;@kishner&lt;/a&gt; &lt;a href=&quot;http://twitter.com/LaunchCenterPro&quot;&gt;@LaunchCenterPro&lt;/a&gt; i also use prioritet: (A) for today, (B) for thisweek, (C) for someday and add promp for LCP&lt;/p&gt;

&lt;p&gt;The newest version of my action (&lt;a href=&quot;https://t.co/1qrvQzVHUp&quot;&gt;import it into LCP&lt;/a&gt;) includes priorities A-C.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[list|clipboard=[clipboard]|prompt=[prompt-return:tasks]]&amp;amp;method=affix&amp;amp;prefix=[-list:priorities|A=%28A%29%20|B=%28B%29%20|C=%28C%29%20|none={{}}][textexpander:ddate]%20&amp;amp;suffix=[-list|no context={{}}|@online=%20%40online|contexts=%20%40[prompt-list( @)]][-list|no project={{}}|+Bills=%20%2BBills|projects=%20%2B[prompt-list( +)]]&amp;amp;scope=lines&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=todotxt}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So now you can send something like the following to Drafts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(A) 2014-07-10 complete task @context +project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works with the &lt;a href=&quot;http://todotxt.com&quot;&gt;Todo.txt&lt;/a&gt; command line interface and the iPhone app. &lt;/p&gt;

&lt;p&gt;Visit the &lt;a href=&quot;http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html&quot;&gt;first post in this series&lt;/a&gt; to get the Drafts Dropbox action, and &lt;a href=&quot;http://blog.jeffreykishner.com/2014/07/09/updateToLaunchCenterProActionToTodotxtMultipleContextsAndProjects.html&quot;&gt;the second one&lt;/a&gt; for more about the contexts and projects.&lt;/p&gt;
				</description>
			<source:outline text="2nd Update to My LCP Todo.txt Action: Now With Priorities" created="Thu, 10 Jul 2014 18:24:31 GMT" type="outline" name="2ndUpdateToMyLcpTodotxtActionNowWithPriorities" >
				<source:outline text="&lt;a href=&quot;http://twitter.com/kishner&quot;&gt;@kishner&lt;/a&gt; &lt;a href=&quot;http://twitter.com/LaunchCenterPro&quot;&gt;@LaunchCenterPro&lt;/a&gt; i also use prioritet: (A) for today, (B) for thisweek, (C) for someday and add promp for LCP" created="Thu Jul 10 01:45:48 +0000 2014" type="tweet" tweetId="487050018424365056" tweetUserName="zaurww" />
				<source:outline text="The newest version of my action ([import it into LCP](https://t.co/1qrvQzVHUp)) includes priorities A-C." created="Thu, 10 Jul 2014 18:27:52 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[list|clipboard=[clipboard]|prompt=[prompt-return:tasks]]&amp;method=affix&amp;prefix=[-list:priorities|A=%28A%29%20|B=%28B%29%20|C=%28C%29%20|none={{}}][textexpander:ddate]%20&amp;suffix=[-list|no context={{}}|@online=%20%40online|contexts=%20%40[prompt-list( @)]][-list|no project={{}}|+Bills=%20%2BBills|projects=%20%2B[prompt-list( +)]]&amp;scope=lines&amp;x-success={{drafts:///create?text=[[output]]&amp;action=todotxt}}" created="Thu, 10 Jul 2014 18:29:07 GMT" />
				<source:outline text="So now you can send something like the following to Drafts:" created="Thu, 10 Jul 2014 18:29:18 GMT" />
				<source:outline text="    (A) 2014-07-10 complete task @context +project" created="Thu, 10 Jul 2014 18:29:27 GMT" />
				<source:outline text="This works with the [Todo.txt](http://todotxt.com) command line interface and the iPhone app. " created="Thu, 10 Jul 2014 18:29:56 GMT" />
				<source:outline text="Visit the [first post in this series](http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html) to get the Drafts Dropbox action, and [the second one](http://blog.jeffreykishner.com/2014/07/09/updateToLaunchCenterProActionToTodotxtMultipleContextsAndProjects.html) for more about the contexts and projects." created="Thu, 10 Jul 2014 18:30:40 GMT" />
				</source:outline>
			<pubDate>Thu, 10 Jul 2014 18:24:31 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/10/2ndUpdateToMyLcpTodotxtActionNowWithPriorities.html</guid>
			</item>
		<item>
			<title>Update to Launch Center Pro Action to Todo.txt: Multiple Contexts and Projects</title>
			<link>http://blog.jeffreykishner.com/2014/07/09/updateToLaunchCenterProActionToTodotxtMultipleContextsAndProjects.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html&quot;&gt;Yesterday&lt;/a&gt; I posted a &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt; action to prepend the date and append a single tag to all the items in a list, and then append that text to a file in Dropbox. Since then, I have been using the &lt;a href=&quot;https://github.com/ginatrapani/todo.txt-cli&quot;&gt;todo.txt command line tool&lt;/a&gt; and decided to upgrade the action.&lt;/p&gt;

&lt;p&gt;This action lets you enter a task and then enter either (a) no tag (I prefer that to &quot;context&quot;); (b) a tag called &lt;code&gt;@online&lt;/code&gt;; (c) any number of tags; followed by (d) no project; (e) a project called &lt;code&gt;+bills&lt;/code&gt;; (f) any number of projects. To enter multiple tags or projects you need to hit Return after each, and then Next only when you're done.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://launchcenterpro.com/z14cdz&quot;&gt;Import the new action&lt;/a&gt;. Or enter the following in the action composer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;amp;method=affix&amp;amp;prefix=[textexpander:ddate]%20&amp;amp;suffix=[-list|no tag={{}}|@online=%20%40online|tag=%20%40[prompt-list( @)]][-list|no project={{}}|+Bills=%20%2BBills|project=%20%2B[prompt-list( +)]]&amp;amp;scope=lines&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=todotxt}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you can decipher this action then you ought to be able to customize it, e.g., add &lt;code&gt;+work&lt;/code&gt; in the projects list.&lt;/p&gt;
				</description>
			<source:outline text="Update to Launch Center Pro Action to Todo.txt: Multiple Contexts and Projects" created="Wed, 09 Jul 2014 18:45:33 GMT" type="outline" name="updateToLaunchCenterProActionToTodotxtMultipleContextsAndProjects" >
				<source:outline text="[Yesterday](http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html) I posted a &quot;Launch Center Pro&quot; action to prepend the date and append a single tag to all the items in a list, and then append that text to a file in Dropbox. Since then, I have been using the [todo.txt command line tool](https://github.com/ginatrapani/todo.txt-cli) and decided to upgrade the action." created="Wed, 09 Jul 2014 18:46:44 GMT" />
				<source:outline text="This action lets you enter a task and then enter either (a) no tag (I prefer that to &quot;context&quot;); (b) a tag called `@online`; (c) any number of tags; followed by (d) no project; (e) a project called `+bills`; (f) any number of projects. To enter multiple tags or projects you need to hit Return after each, and then Next only when you're done." created="Wed, 09 Jul 2014 18:48:38 GMT" />
				<source:outline text="[Import the new action](https://launchcenterpro.com/z14cdz). Or enter the following in the action composer:" created="Wed, 09 Jul 2014 18:46:06 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;method=affix&amp;prefix=[textexpander:ddate]%20&amp;suffix=[-list|no tag={{}}|@online=%20%40online|tag=%20%40[prompt-list( @)]][-list|no project={{}}|+Bills=%20%2BBills|project=%20%2B[prompt-list( +)]]&amp;scope=lines&amp;x-success={{drafts:///create?text=[[output]]&amp;action=todotxt}}" created="Wed, 09 Jul 2014 18:46:25 GMT" />
				<source:outline text="If you can decipher this action then you ought to be able to customize it, e.g., add `+work` in the projects list." created="Wed, 09 Jul 2014 18:55:28 GMT" />
				</source:outline>
			<pubDate>Wed, 09 Jul 2014 18:45:33 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/09/updateToLaunchCenterProActionToTodotxtMultipleContextsAndProjects.html</guid>
			</item>
		<item>
			<title>A Launch Center Pro Action for Todo.txt</title>
			<link>http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html</link>
			<description>
				&lt;p&gt;A blog reader emailed the following question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I have texttool, draft and LCP apps on my iphone.&lt;/p&gt;
  
  &lt;p&gt;Please help me this issue. &lt;/p&gt;
  
  &lt;p&gt;I have todo.txt file in directory dropbox/todo/todo.txt &lt;/p&gt;
  
  &lt;p&gt;I write in draft app one note with multiline line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Task1

Task2 

Task3 
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;I want to add this list to shown todo.txt (each line separate) in this format: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[current date] task1 @grocery 

[current date] task2 @grocery 

[current date] task3 @grocery 
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;@grocery tag optional and may be replaced with other tag.&lt;/p&gt;
  
  &lt;p&gt;How to do this?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a solution that adds the current date before each list item and the single tag of your choice after each list item.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://launchcenterpro.com/zlv5l6&quot;&gt;Import the LCP action&lt;/a&gt; or enter the following in the action composer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;amp;method=affix&amp;amp;prefix=[textexpander:ddate]%20&amp;amp;suffix=%20%40[prompt:tag]&amp;amp;scope=lines
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I tap on this action, I enter each list item on a new line (hitting Return after each item except the last) and when I'm done I hit &quot;Next&quot;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apple

orange

banana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the next prompt asks me to enter a tag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groceries
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The action outputs the following in &lt;a href=&quot;http://blackfoggames.com/TextTool/&quot;&gt;TextTool&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2014-07-08 apple @groceries

2014-07-08 orange @groceries

2014-07-08 banana @groceries
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above action requires that I have a &lt;a href=&quot;http://smilesoftware.com/apps/&quot;&gt;TextExpander&lt;/a&gt; snippet called &lt;em&gt;ddate&lt;/em&gt; in the following format: %Y-%m-%d, and that I have imported snippets into &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;Prepending the Output to the todo.txt File&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://launchcenterpro.com/99t4yt&quot;&gt;Import this action&lt;/a&gt; to prepend the output from TextTool to your &lt;em&gt;todo.txt&lt;/em&gt; file, or enter the following into the LCP action composer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;amp;method=affix&amp;amp;prefix=[textexpander:ddate]%20&amp;amp;suffix=%20%40[prompt:tag]&amp;amp;scope=lines&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=todotxt}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above action requires that you &lt;a href=&quot;drafts://x-callback-url/import_action?type=dropbox&amp;amp;name=todotxt&amp;amp;path=%2Ftodo%2F&amp;amp;filenametype=2&amp;amp;filename=todo&amp;amp;ext=txt&amp;amp;writetype=1&amp;amp;template=%5B%5Bdraft%5D%5D&quot;&gt;import this Dropbox action&lt;/a&gt; into &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt;. Or enter the following as a Dropbox action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Name: todotxt

Path: /todo/

File (predefined): todo

Ext: txt

Write: Prepend

Template: [[draft]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is possible to accomplish the above without LCP. &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=date-list-tag&amp;amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Ftext%3D%5B%5Bbody%5D%5D%26method%3Daffix%26prefix%3Dddate%2520%26suffix%3D%2520%2540%5B%5Btitle%5D%5D%26scope%3Dlines%26x-success%3D%7B%7Bdrafts%3A%2F%2F%2Fcreate%3Ftext%3D%5B%5Boutput%5D%5D%26action%3Dtodotxt%7D%7D&quot;&gt;Import this URL action&lt;/a&gt; into Drafts, or enter the following as an URL action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[[body]]&amp;amp;method=affix&amp;amp;prefix=ddate%20&amp;amp;suffix=%20%40[[title]]&amp;amp;scope=lines&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=todotxt}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only difference is that you need to enter the tag name on the first line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groceries

apple

orange

banana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything else works exactly the same. (You still need to install the Dropbox action and to import TextExpander snippets.)&lt;/p&gt;
				</description>
			<source:outline text="A Launch Center Pro Action for Todo.txt" created="Tue, 08 Jul 2014 16:51:00 GMT" type="outline" name="aLaunchCenterProActionForTodotxt" >
				<source:outline text="A blog reader emailed the following question:" created="Tue, 08 Jul 2014 16:51:10 GMT" />
				<source:outline text="&gt; I have texttool, draft and LCP apps on my iphone." />
				<source:outline text="&gt; Please help me this issue. " />
				<source:outline text="&gt; I have todo.txt file in directory dropbox/todo/todo.txt " />
				<source:outline text="&gt; I write in draft app one note with multiline line:" />
				<source:outline text="&gt;     Task1" />
				<source:outline text="&gt;     Task2 " />
				<source:outline text="&gt;     Task3 " />
				<source:outline text="&gt; I want to add this list to shown todo.txt (each line separate) in this format: " />
				<source:outline text="&gt;     [current date] task1 @grocery " />
				<source:outline text="&gt;     [current date] task2 @grocery " />
				<source:outline text="&gt;     [current date] task3 @grocery " />
				<source:outline text="&gt; @grocery tag optional and may be replaced with other tag." />
				<source:outline text="&gt; How to do this?" />
				<source:outline text="Here is a solution that adds the current date before each list item and the single tag of your choice after each list item." created="Tue, 08 Jul 2014 16:53:38 GMT" />
				<source:outline text="[Import the LCP action](https://launchcenterpro.com/zlv5l6) or enter the following in the action composer:" created="Tue, 08 Jul 2014 16:52:30 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;method=affix&amp;prefix=[textexpander:ddate]%20&amp;suffix=%20%40[prompt:tag]&amp;scope=lines" created="Tue, 08 Jul 2014 16:53:35 GMT" />
				<source:outline text="When I tap on this action, I enter each list item on a new line (hitting Return after each item except the last) and when I'm done I hit &quot;Next&quot;." created="Tue, 08 Jul 2014 16:54:30 GMT" />
				<source:outline text="    apple" created="Tue, 08 Jul 2014 16:55:36 GMT" />
				<source:outline text="    orange" created="Tue, 08 Jul 2014 16:55:41 GMT" />
				<source:outline text="    banana" created="Tue, 08 Jul 2014 16:55:44 GMT" />
				<source:outline text="Then the next prompt asks me to enter a tag:" created="Tue, 08 Jul 2014 16:55:47 GMT" />
				<source:outline text="    groceries" created="Tue, 08 Jul 2014 16:56:02 GMT" />
				<source:outline text="The action outputs the following in &quot;TextTool&quot;:" created="Tue, 08 Jul 2014 16:56:24 GMT" />
				<source:outline text="    2014-07-08 apple @groceries" created="Tue, 08 Jul 2014 16:56:37 GMT" />
				<source:outline text="    2014-07-08 orange @groceries" created="Tue, 08 Jul 2014 16:56:47 GMT" />
				<source:outline text="    2014-07-08 banana @groceries" created="Tue, 08 Jul 2014 16:56:48 GMT" />
				<source:outline text="The above action requires that I have a &quot;TextExpander&quot; snippet called _ddate_ in the following format: %Y-%m-%d, and that I have imported snippets into &quot;Launch Center Pro&quot;. " created="Tue, 08 Jul 2014 16:56:56 GMT" />
				<source:outline text="###Prepending the Output to the todo.txt File" created="Tue, 08 Jul 2014 16:58:23 GMT" />
				<source:outline text="[Import this action](https://launchcenterpro.com/99t4yt) to prepend the output from TextTool to your _todo.txt_ file, or enter the following into the LCP action composer:" created="Tue, 08 Jul 2014 17:04:02 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[prompt-return:tasks]&amp;method=affix&amp;prefix=[textexpander:ddate]%20&amp;suffix=%20%40[prompt:tag]&amp;scope=lines&amp;x-success={{drafts:///create?text=[[output]]&amp;action=todotxt}}" created="Tue, 08 Jul 2014 17:06:56 GMT" />
				<source:outline text="The above action requires that you [import this Dropbox action](drafts://x-callback-url/import_action?type=dropbox&amp;name=todotxt&amp;path=%2Ftodo%2F&amp;filenametype=2&amp;filename=todo&amp;ext=txt&amp;writetype=1&amp;template=%5B%5Bdraft%5D%5D) into &quot;Drafts&quot;. Or enter the following as a Dropbox action:" created="Tue, 08 Jul 2014 17:06:58 GMT" />
				<source:outline text="    Name: todotxt" created="Tue, 08 Jul 2014 17:08:22 GMT" />
				<source:outline text="    Path: /todo/" created="Tue, 08 Jul 2014 17:08:26 GMT" />
				<source:outline text="    File (predefined): todo" created="Tue, 08 Jul 2014 17:08:32 GMT" />
				<source:outline text="    Ext: txt" created="Tue, 08 Jul 2014 17:08:45 GMT" />
				<source:outline text="    Write: Prepend" created="Tue, 08 Jul 2014 17:08:49 GMT" />
				<source:outline text="    Template: [[draft]]" created="Tue, 08 Jul 2014 17:08:54 GMT" />
				<source:outline text="It is possible to accomplish the above without LCP. [Import this URL action](drafts://x-callback-url/import_action?type=URL&amp;name=date-list-tag&amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Ftext%3D%5B%5Bbody%5D%5D%26method%3Daffix%26prefix%3Dddate%2520%26suffix%3D%2520%2540%5B%5Btitle%5D%5D%26scope%3Dlines%26x-success%3D%7B%7Bdrafts%3A%2F%2F%2Fcreate%3Ftext%3D%5B%5Boutput%5D%5D%26action%3Dtodotxt%7D%7D) into Drafts, or enter the following as an URL action:" created="Tue, 08 Jul 2014 17:11:25 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[[body]]&amp;method=affix&amp;prefix=ddate%20&amp;suffix=%20%40[[title]]&amp;scope=lines&amp;x-success={{drafts:///create?text=[[output]]&amp;action=todotxt}}" created="Tue, 08 Jul 2014 17:16:30 GMT" />
				<source:outline text="The only difference is that you need to enter the tag name on the first line:" created="Tue, 08 Jul 2014 17:16:34 GMT" />
				<source:outline text="    groceries" created="Tue, 08 Jul 2014 17:16:49 GMT" />
				<source:outline text="    apple" created="Tue, 08 Jul 2014 17:16:56 GMT" />
				<source:outline text="    orange" created="Tue, 08 Jul 2014 17:17:00 GMT" />
				<source:outline text="    banana" created="Tue, 08 Jul 2014 17:17:02 GMT" />
				<source:outline text="Everything else works exactly the same. (You still need to install the Dropbox action and to import TextExpander snippets.)" created="Tue, 08 Jul 2014 17:17:06 GMT" />
				</source:outline>
			<pubDate>Tue, 08 Jul 2014 16:51:00 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/08/aLaunchCenterProActionForTodotxt.html</guid>
			</item>
		<item>
			<title>How to Get the SoundCloud URL Schemes for Users and Tracks</title>
			<link>http://blog.jeffreykishner.com/2014/07/08/howToGetTheSoundcloudUrlSchemesForUsersAndTracks.html</link>
			<description>
				&lt;p&gt;SoundCloud has url schemes to jump to a user or a specific track in the iOS app. I have cobbled the following together after reading a few threads on Stack Overflow.&lt;/p&gt;

&lt;h3&gt;How to Create a User URL Scheme&lt;/h3&gt;

&lt;p&gt;Let's get the url scheme for &lt;a href=&quot;https://soundcloud.com/tashablank&quot;&gt;Tasha Blank&lt;/a&gt;. Click on the share icon &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; then choose the Embed tab and then copy the embed code into a text editor. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/325143&amp;amp;amp;auto_play=false&amp;amp;amp;hide_related=false&amp;amp;amp;show_comments=true&amp;amp;amp;show_user=true&amp;amp;amp;show_reposts=false&amp;amp;amp;visual=true&quot;&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look for &lt;code&gt;api.soundcloud.com/users/&lt;/code&gt;. Copy the numerical string immediately after that, up until the &lt;code&gt;&amp;amp;&lt;/code&gt;. Put that string after &lt;code&gt;soundcloud://users/&lt;/code&gt; and you'll get &lt;a href=&quot;soundcloud://users/325143&quot;&gt;soundcloud://users/325143&lt;/a&gt;. If you click on this link on your iOS device, it will bring you to her page. And you can add it to &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt; in an action or list.&lt;/p&gt;

&lt;h3&gt;How to Create a Track URL Scheme&lt;/h3&gt;

&lt;p&gt;Let's get the url scheme for &lt;a href=&quot;https://soundcloud.com/tashablank/live-the-get-down-62614&quot;&gt;one of Tasha's recent tracks&lt;/a&gt;. Click on the share icon &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; then choose the Embed tab and then copy the embed code into a text editor.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/156299506&amp;amp;amp;auto_play=false&amp;amp;amp;hide_related=false&amp;amp;amp;show_comments=true&amp;amp;amp;show_user=true&amp;amp;amp;show_reposts=false&amp;amp;amp;visual=true&quot;&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look for &lt;code&gt;api.soundcloud.com/tracks/&lt;/code&gt;. Copy the numerical string immediately after that, up until the &lt;code&gt;&amp;amp;&lt;/code&gt;. Put that string after &lt;code&gt;soundcloud://tracks/&lt;/code&gt; and you'll get &lt;a href=&quot;soundcloud://tracks:156299506&quot;&gt;soundcloud://tracks:156299506&lt;/a&gt;. If you click on this link on your iOS device, it will bring you to that track and start to auto-play. And you can add it to &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt; in an action or list.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I don't know how else to get track and user IDs without signing up for a developer account, but if you find a solution, please let me know in the comments or on &lt;a href=&quot;https://twitter.com/kishner&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
				</description>
			<source:outline text="How to Get the SoundCloud URL Schemes for Users and Tracks" created="Tue, 08 Jul 2014 15:05:06 GMT" type="outline" >
				<source:outline text="SoundCloud has url schemes to jump to a user or a specific track in the iOS app. I have cobbled the following together after reading a few threads on Stack Overflow." created="Tue, 08 Jul 2014 15:22:16 GMT" />
				<source:outline text="###How to Create a User URL Scheme" created="Tue, 08 Jul 2014 15:23:55 GMT" />
				<source:outline text="Let's get the url scheme for [Tasha Blank](https://soundcloud.com/tashablank). Click on the share icon &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; then choose the Embed tab and then copy the embed code into a text editor. " created="Tue, 08 Jul 2014 15:24:10 GMT" />
				<source:outline text="    &lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/325143&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;" />
				<source:outline text="Look for `api.soundcloud.com/users/`. Copy the numerical string immediately after that, up until the `&amp;`. Put that string after `soundcloud://users/` and you'll get [soundcloud://users/325143](soundcloud://users/325143). If you click on this link on your iOS device, it will bring you to her page. And you can add it to &quot;Launch Center Pro&quot; in an action or list." created="Tue, 08 Jul 2014 15:24:10 GMT" />
				<source:outline text="###How to Create a Track URL Scheme" created="Tue, 08 Jul 2014 15:05:34 GMT" />
				<source:outline text="Let's get the url scheme for [one of Tasha's recent tracks](https://soundcloud.com/tashablank/live-the-get-down-62614). Click on the share icon &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; then choose the Embed tab and then copy the embed code into a text editor." />
				<source:outline text="    &lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/156299506&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;" />
				<source:outline text="Look for `api.soundcloud.com/tracks/`. Copy the numerical string immediately after that, up until the `&amp;`. Put that string after `soundcloud://tracks/` and you'll get [soundcloud://tracks:156299506](soundcloud://tracks:156299506). If you click on this link on your iOS device, it will bring you to that track and start to auto-play. And you can add it to &quot;Launch Center Pro&quot; in an action or list." />
				<source:outline text="&amp;nbsp;" created="Tue, 08 Jul 2014 15:31:38 GMT" />
				<source:outline text="I don't know how else to get track and user IDs without signing up for a developer account, but if you find a solution, please let me know in the comments or on [Twitter](https://twitter.com/kishner)." created="Tue, 08 Jul 2014 15:31:42 GMT" />
				</source:outline>
			<pubDate>Tue, 08 Jul 2014 15:05:06 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/08/howToGetTheSoundcloudUrlSchemesForUsersAndTracks.html</guid>
			</item>
		<item>
			<title>Convert Tumblr and Instagram Post Web Links to iOS URL Schemes With These Launch Center Pro Actions</title>
			<link>http://blog.jeffreykishner.com/2014/07/07/convertTumblrAndInstagramPostWebLinksToIosUrlSchemesWithTheseLaunchCenterProActions.html</link>
			<description>
				&lt;p&gt;If you're browsing the Tumblr or Instagram apps on your iOS device and want to get the share URL, they are formatted as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://NAME.tumblr.com/post/POST_ID/SLUG

http://instagram.com/p/POST_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately, these are web links. What if you want a link that will bring you right to that post ID in the &lt;em&gt;app&lt;/em&gt;? I have written a couple of &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt; actions to automate these processes.&lt;/p&gt;

&lt;h3&gt;Tumblr&lt;/h3&gt;

&lt;p&gt;The URL scheme for a Tumblr post (as per &lt;a href=&quot;https://github.com/tumblr/TMTumblrSDK#url-schemes&quot;&gt;GitHub&lt;/a&gt;) is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tumblr://x-callback-url/blog?blogName=NAME&amp;amp;postID=POST_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the information you need is in the web link, but you need to rearrange it all to make it work.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://launchcenterpro.com/759n6q&quot;&gt;Import the Tumblr action&lt;/a&gt; or enter the following into LCP:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[clipboard]&amp;amp;method=split&amp;amp;delimiter=%2F&amp;amp;lc-icon=tumblr&amp;amp;x-success={{texttool://x-callback-url/transform?text=[[output]]&amp;amp;method=split&amp;amp;delimiter=.&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=tumblr-id}}}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To make this action work, you will also need &lt;a href=&quot;http://blackfoggames.com/TextTool/&quot;&gt;TextTool&lt;/a&gt; and &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt;. And you will need to &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=tumblr-id&amp;amp;url=drafts%3A%2F%2F%2Fcreate%3Ftext%3D%7B%7Btumblr%3A%2F%2Fx-callback-url%2Fblog%3FblogName%3D%5B%5Bline%7C3%5D%5D%26postID%3D%5B%5Bline%7C7%5D%5D%7D%7D&quot;&gt;import this URL action into Drafts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's work with a random Tumblr post to see how this works:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://yahoo.tumblr.com/post/90564142294/furthering-our-focus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy this URL to your iOS clipboard, and then tap on the Tumblr action in LCP. LCP sends this string to TextTool, which splits the string at the &lt;code&gt;/&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http:



yahoo.tumblr.com

post

90564142294

furthering-our-focus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It then takes that output and sends it back to TextTool to split at the &lt;code&gt;.&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http:



yahoo

tumblr

com

post

90564142294

furthering-our-focus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It then sends that output to Drafts and triggers the &lt;em&gt;tumblr-id&lt;/em&gt; URL action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drafts:///create?text={{tumblr://x-callback-url/blog?blogName=[[line|3]]&amp;amp;postID=[[line|7]]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This action inputs lines 3 and 7 of the draft into the relevant points of the url scheme, and creates a new draft with the final result:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tumblr://x-callback-url/blog?blogName=yahoo&amp;amp;postID=90564142294
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And just to make the action icon look nice, I added &lt;code&gt;lc-icon=tumblr&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Instagram&lt;/h3&gt;

&lt;p&gt;The Instagram action is more complicated. It requires &lt;a href=&quot;http://blackfoggames.com/TextTool/&quot;&gt;TextTool&lt;/a&gt;, &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt;, and &lt;a href=&quot;http://www.textasticapp.com/&quot;&gt;Textastic&lt;/a&gt;. &lt;a href=&quot;https://launchcenterpro.com/w4z9z9&quot;&gt;Import the LCP action&lt;/a&gt; or enter this into a new action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;textastic://api.instagram.com/oembed?url=[clipboard]&amp;amp;lc-icon=instagram&amp;amp;lc-callback=[list|url=texttool://x-callback-url/transform?text=[clipboard]&amp;amp;method=split&amp;amp;delimiter=%22&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=insta-api}}|image=texttool://x-callback-url/transform?text=[clipboard]&amp;amp;method=split&amp;amp;delimiter=%22&amp;amp;x-success={{drafts:///create?text=[[output]]&amp;amp;action=insta-api-url}}]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instagram's url scheme for a post is as follows (as per its &lt;a href=&quot;http://instagram.com/developer/iphone-hooks/&quot;&gt;iPhone Hooks page&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;instagram://media?id=MEDIA_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The media ID is not part of the web URL. But we can get that info from Instagrams's &lt;a href=&quot;http://instagram.com/developer/embedding/&quot;&gt;Embed API&lt;/a&gt;. Let's use an example post (&lt;code&gt;http://instagram.com/p/qJu0a-OHMC&lt;/code&gt;) and add it after the &lt;code&gt;url=&lt;/code&gt;: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://api.instagram.com/oembed?url=http://instagram.com/p/qJu0a-OHMC
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This API returns JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; {&quot;provider_url&quot;:&quot;http:\/\/instagram.com\/&quot;,&quot;media_id&quot;:&quot;759343924702114562_1483611&quot;,&quot;title&quot;:&quot;Another beautiful day in the city! \ud83d\ude0d&quot;,&quot;url&quot;:&quot;http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg&quot;,&quot;author_name&quot;:&quot;newyorkcity&quot;,&quot;height&quot;:640,&quot;width&quot;:640,&quot;version&quot;:&quot;1.0&quot;,&quot;author_url&quot;:&quot;http:\/\/instagram.com\/newyorkcity&quot;,&quot;author_id&quot;:1483611,&quot;type&quot;:&quot;photo&quot;,&quot;provider_name&quot;:&quot;Instagram&quot;} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can see that the media_id is 759343924702114562_1483611. &lt;code&gt;instagram://media?id=759343924702114562_1483611&lt;/code&gt; would bring us right to that post in the app, but we need the LCP action to automate the process.&lt;/p&gt;

&lt;p&gt;We first need an easy way to grab the HTML of the API results. Textastic has an &lt;a href=&quot;http://www.textasticapp.com/v4/manual/x-callback-url.html&quot;&gt;url scheme&lt;/a&gt; that lets you download a file and open the HTML in the editor by replacing &lt;code&gt;http://&lt;/code&gt; with &lt;code&gt;textastic://&lt;/code&gt;. The first part of the LCP action does just that. However, even though Textastic supports x-callback-url, it doesn't for this particular action. So we need to tap on the share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; button at top right of the screen after the HTML has downloaded, and choose &quot;Copy All.&quot; Then we take advantage of a new feature introduced in LCP: lc-callback. For apps that do not support x-callback-url, this is the next best thing. We define the callback action, but instead of it triggering automatically after the first action, we double-tap on the home button (to get the app launcher) and choose LCP. Once we tap on LCP, the next action gets triggered. &lt;/p&gt;

&lt;p&gt;Because the embed API also provides the raw image URL for the Instagram post, the lc-callback starts with a list. We can get the iOS url scheme (&quot;url&quot;) or the raw image URL (&quot;image&quot;). Let's see what happens when you choose &quot;url&quot;:&lt;/p&gt;

&lt;p&gt;The entire HTML is sent to TextTool, which splits the string at &lt;code&gt;&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{

provider_url

:

http:\/\/instagram.com\/

,

media_id

:

759343924702114562_1483611

,

title

:

Another beautiful day in the city! \ud83d\ude0d

,

url

:

http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg

,

author_name

:

newyorkcity

,

height

:640,

width

:640,

version

:

1.0

,

author_url

:

http:\/\/instagram.com\/newyorkcity

,

author_id

:1483611,

type

:

photo

,

provider_name

:

Instagram

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This entire string is then sent to Drafts, and the &lt;em&gt;insta-api&lt;/em&gt; action is triggered. &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=insta-api&amp;amp;url=drafts%3A%2F%2F%2Fcreate%3Ftext%3D%7B%7Binstagram%3A%2F%2Fmedia%3Fid%3D%5B%5Bline%7C8%5D%5D%7D%7D&quot;&gt;Import it into Drafts&lt;/a&gt; or enter the following as an URL action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drafts:///create?text={{instagram://media?id=[[line|8]]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It simply takes line 8 -- which contains the media_ID -- and inserts into into the URL scheme.&lt;/p&gt;

&lt;p&gt;Now, if we would rather get the raw image URL, we choose &quot;image&quot; after the lc-callback. It also performs a &lt;code&gt;&quot;&lt;/code&gt; split and sends that output to Drafts, but it instead triggers the &lt;em&gt;insta-api-url&lt;/em&gt; action. &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=insta-api-url&amp;amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Ftext%3D%5B%5Bline%7C16%5D%5D%26method%3Dunescape&quot;&gt;Import it into Drafts&lt;/a&gt; or enter the following URL action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?text=[[line|16]]&amp;amp;method=unescape
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Line 16 -- the raw image URL -- is sent to TextTool. Why? All the forward slashes in the URL are &quot;escaped&quot; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;so we have to unescape them:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   http://photos-d.ak.instagram.com/hphotos-ak-xfp1/10537269_595401073912091_331298792_n.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This action stops at TextTool. It has sharing features, so you can do what you like with URL: e.g., download the image.&lt;/p&gt;

&lt;p&gt;To make the action icon look nice, I added &lt;code&gt;lc-icon=instagram&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Granted, this LCP action is not fluid. I think it would possible to perform the conversion without the &quot;Copy All&quot; and lc-callback using the JSON parser in Pythonista, but I'm not proficient enough to accomplish that as of this writing. If you write an action that accomplishes the conversion with fewer steps, I would love to hear from you in the comments section or on Twitter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt; to @epramono and @youens on Twitter for helping me to understand LCP 2.3.x at a deeper level.&lt;/p&gt;
				</description>
			<source:outline text="Convert Tumblr and Instagram Post Web Links to iOS URL Schemes With These Launch Center Pro Actions" created="Mon, 07 Jul 2014 18:38:49 GMT" type="outline" name="convertTumblrAndInstagramPostWebLinksToIosUrlSchemesWithTheseLaunchCenterProActions" >
				<source:outline text="If you're browsing the Tumblr or Instagram apps on your iOS device and want to get the share URL, they are formatted as follows:" created="Mon, 07 Jul 2014 18:39:11 GMT" />
				<source:outline text="    http://NAME.tumblr.com/post/POST_ID/SLUG" created="Mon, 07 Jul 2014 18:39:47 GMT" />
				<source:outline text="    http://instagram.com/p/POST_ID" created="Mon, 07 Jul 2014 18:41:15 GMT" />
				<source:outline text="Unfortunately, these are web links. What if you want a link that will bring you right to that post ID in the _app_? I have written a couple of &quot;Launch Center Pro&quot; actions to automate these processes." created="Mon, 07 Jul 2014 18:47:35 GMT" />
				<source:outline text="###Tumblr" created="Mon, 07 Jul 2014 18:48:26 GMT" />
				<source:outline text="The URL scheme for a Tumblr post (as per [GitHub](https://github.com/tumblr/TMTumblrSDK#url-schemes)) is as follows:" created="Mon, 07 Jul 2014 18:48:48 GMT" />
				<source:outline text="    tumblr://x-callback-url/blog?blogName=NAME&amp;postID=POST_ID" created="Mon, 07 Jul 2014 18:40:41 GMT" />
				<source:outline text="All the information you need is in the web link, but you need to rearrange it all to make it work." created="Mon, 07 Jul 2014 18:49:20 GMT" />
				<source:outline text="[Import the Tumblr action](https://launchcenterpro.com/759n6q) or enter the following into LCP:" created="Mon, 07 Jul 2014 18:49:20 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[clipboard]&amp;method=split&amp;delimiter=%2F&amp;lc-icon=tumblr&amp;x-success={{texttool://x-callback-url/transform?text=[[output]]&amp;method=split&amp;delimiter=.&amp;x-success={{drafts:///create?text=[[output]]&amp;action=tumblr-id}}}}" created="Mon, 07 Jul 2014 18:56:39 GMT" />
				<source:outline text="To make this action work, you will also need &quot;TextTool&quot; and &quot;Drafts&quot;. And you will need to [import this URL action into Drafts](drafts://x-callback-url/import_action?type=URL&amp;name=tumblr-id&amp;url=drafts%3A%2F%2F%2Fcreate%3Ftext%3D%7B%7Btumblr%3A%2F%2Fx-callback-url%2Fblog%3FblogName%3D%5B%5Bline%7C3%5D%5D%26postID%3D%5B%5Bline%7C7%5D%5D%7D%7D)." created="Mon, 07 Jul 2014 18:56:44 GMT" />
				<source:outline text="Let's work with a random Tumblr post to see how this works:" created="Mon, 07 Jul 2014 18:57:44 GMT" />
				<source:outline text="    http://yahoo.tumblr.com/post/90564142294/furthering-our-focus" created="Mon, 07 Jul 2014 18:59:06 GMT" />
				<source:outline text="Copy this URL to your iOS clipboard, and then tap on the Tumblr action in LCP. LCP sends this string to TextTool, which splits the string at the `/`:" created="Mon, 07 Jul 2014 18:59:09 GMT" />
				<source:outline text="    http:" created="Mon, 07 Jul 2014 19:00:55 GMT" />
				<source:outline text="" created="Mon, 07 Jul 2014 19:08:09 GMT" />
				<source:outline text="    yahoo.tumblr.com" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    post" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    90564142294" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    furthering-our-focus" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="It then takes that output and sends it back to TextTool to split at the `.`:" created="Mon, 07 Jul 2014 18:59:56 GMT" />
				<source:outline text="    http:" created="Mon, 07 Jul 2014 19:00:55 GMT" />
				<source:outline text="" created="Mon, 07 Jul 2014 19:08:11 GMT" />
				<source:outline text="    yahoo" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    tumblr" created="Mon, 07 Jul 2014 19:06:11 GMT" />
				<source:outline text="    com" created="Mon, 07 Jul 2014 19:06:11 GMT" />
				<source:outline text="    post" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    90564142294" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="    furthering-our-focus" created="Mon, 07 Jul 2014 19:03:45 GMT" />
				<source:outline text="It then sends that output to Drafts and triggers the _tumblr-id_ URL action:" created="Mon, 07 Jul 2014 19:06:18 GMT" />
				<source:outline text="    drafts:///create?text={{tumblr://x-callback-url/blog?blogName=[[line|3]]&amp;postID=[[line|7]]}}" created="Mon, 07 Jul 2014 19:07:33 GMT" />
				<source:outline text="This action inputs lines 3 and 7 of the draft into the relevant points of the url scheme, and creates a new draft with the final result:" created="Mon, 07 Jul 2014 19:11:16 GMT" />
				<source:outline text="    tumblr://x-callback-url/blog?blogName=yahoo&amp;postID=90564142294" created="Mon, 07 Jul 2014 19:12:56 GMT" />
				<source:outline text="And just to make the action icon look nice, I added `lc-icon=tumblr`." created="Mon, 07 Jul 2014 19:12:58 GMT" />
				<source:outline text="###Instagram" created="Mon, 07 Jul 2014 19:13:29 GMT" />
				<source:outline text="The Instagram action is more complicated. It requires &quot;TextTool&quot;, &quot;Drafts&quot;, and &quot;Textastic&quot;. [Import the LCP action](https://launchcenterpro.com/w4z9z9) or enter this into a new action:" created="Mon, 07 Jul 2014 19:13:35 GMT" />
				<source:outline text="    textastic://api.instagram.com/oembed?url=[clipboard]&amp;lc-icon=instagram&amp;lc-callback=[list|url=texttool://x-callback-url/transform?text=[clipboard]&amp;method=split&amp;delimiter=%22&amp;x-success={{drafts:///create?text=[[output]]&amp;action=insta-api}}|image=texttool://x-callback-url/transform?text=[clipboard]&amp;method=split&amp;delimiter=%22&amp;x-success={{drafts:///create?text=[[output]]&amp;action=insta-api-url}}]" created="Mon, 07 Jul 2014 19:17:58 GMT" />
				<source:outline text="Instagram's url scheme for a post is as follows (as per its [iPhone Hooks page](http://instagram.com/developer/iphone-hooks/)):" created="Mon, 07 Jul 2014 19:26:09 GMT" />
				<source:outline text="    instagram://media?id=MEDIA_ID" created="Mon, 07 Jul 2014 18:43:11 GMT" />
				<source:outline text="The media ID is not part of the web URL. But we can get that info from Instagrams's [Embed API](http://instagram.com/developer/embedding/). Let's use an example post (`http://instagram.com/p/qJu0a-OHMC`) and add it after the `url=`: " created="Mon, 07 Jul 2014 19:27:07 GMT" />
				<source:outline text="    http://api.instagram.com/oembed?url=http://instagram.com/p/qJu0a-OHMC" created="Mon, 07 Jul 2014 18:44:38 GMT" />
				<source:outline text="This API returns JSON:" created="Mon, 07 Jul 2014 19:31:28 GMT" />
				<source:outline text="     {&quot;provider_url&quot;:&quot;http:\/\/instagram.com\/&quot;,&quot;media_id&quot;:&quot;759343924702114562_1483611&quot;,&quot;title&quot;:&quot;Another beautiful day in the city! \ud83d\ude0d&quot;,&quot;url&quot;:&quot;http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg&quot;,&quot;author_name&quot;:&quot;newyorkcity&quot;,&quot;height&quot;:640,&quot;width&quot;:640,&quot;version&quot;:&quot;1.0&quot;,&quot;author_url&quot;:&quot;http:\/\/instagram.com\/newyorkcity&quot;,&quot;author_id&quot;:1483611,&quot;type&quot;:&quot;photo&quot;,&quot;provider_name&quot;:&quot;Instagram&quot;} " created="Mon, 07 Jul 2014 18:45:28 GMT" />
				<source:outline text="We can see that the media_id is 759343924702114562_1483611. `instagram://media?id=759343924702114562_1483611` would bring us right to that post in the app, but we need the LCP action to automate the process." created="Mon, 07 Jul 2014 18:45:42 GMT" />
				<source:outline text="We first need an easy way to grab the HTML of the API results. Textastic has an [url scheme](http://www.textasticapp.com/v4/manual/x-callback-url.html) that lets you download a file and open the HTML in the editor by replacing `http://` with `textastic://`. The first part of the LCP action does just that. However, even though Textastic supports x-callback-url, it doesn't for this particular action. So we need to tap on the share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt; button at top right of the screen after the HTML has downloaded, and choose &quot;Copy All.&quot; Then we take advantage of a new feature introduced in LCP: lc-callback. For apps that do not support x-callback-url, this is the next best thing. We define the callback action, but instead of it triggering automatically after the first action, we double-tap on the home button (to get the app launcher) and choose LCP. Once we tap on LCP, the next action gets triggered. " created="Mon, 07 Jul 2014 19:34:35 GMT" />
				<source:outline text="Because the embed API also provides the raw image URL for the Instagram post, the lc-callback starts with a list. We can get the iOS url scheme (&quot;url&quot;) or the raw image URL (&quot;image&quot;). Let's see what happens when you choose &quot;url&quot;:" created="Mon, 07 Jul 2014 19:36:07 GMT" />
				<source:outline text="The entire HTML is sent to TextTool, which splits the string at `&quot;`:" created="Mon, 07 Jul 2014 19:42:40 GMT" />
				<source:outline text="    {" />
				<source:outline text="    provider_url" />
				<source:outline text="    :" />
				<source:outline text="    http:\/\/instagram.com\/" />
				<source:outline text="    ," />
				<source:outline text="    media_id" />
				<source:outline text="    :" />
				<source:outline text="    759343924702114562_1483611" />
				<source:outline text="    ," />
				<source:outline text="    title" />
				<source:outline text="    :" />
				<source:outline text="    Another beautiful day in the city! \ud83d\ude0d" />
				<source:outline text="    ," />
				<source:outline text="    url" />
				<source:outline text="    :" />
				<source:outline text="    http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg" />
				<source:outline text="    ," />
				<source:outline text="    author_name" />
				<source:outline text="    :" />
				<source:outline text="    newyorkcity" />
				<source:outline text="    ," />
				<source:outline text="    height" />
				<source:outline text="    :640," />
				<source:outline text="    width" />
				<source:outline text="    :640," />
				<source:outline text="    version" />
				<source:outline text="    :" />
				<source:outline text="    1.0" />
				<source:outline text="    ," />
				<source:outline text="    author_url" />
				<source:outline text="    :" />
				<source:outline text="    http:\/\/instagram.com\/newyorkcity" />
				<source:outline text="    ," />
				<source:outline text="    author_id" />
				<source:outline text="    :1483611," />
				<source:outline text="    type" />
				<source:outline text="    :" />
				<source:outline text="    photo" />
				<source:outline text="    ," />
				<source:outline text="    provider_name" />
				<source:outline text="    :" />
				<source:outline text="    Instagram" />
				<source:outline text="    }" />
				<source:outline text="This entire string is then sent to Drafts, and the _insta-api_ action is triggered. [Import it into Drafts](drafts://x-callback-url/import_action?type=URL&amp;name=insta-api&amp;url=drafts%3A%2F%2F%2Fcreate%3Ftext%3D%7B%7Binstagram%3A%2F%2Fmedia%3Fid%3D%5B%5Bline%7C8%5D%5D%7D%7D) or enter the following as an URL action:" created="Mon, 07 Jul 2014 19:49:23 GMT" />
				<source:outline text="    drafts:///create?text={{instagram://media?id=[[line|8]]}}" created="Mon, 07 Jul 2014 19:50:17 GMT" />
				<source:outline text="It simply takes line 8 -- which contains the media_ID -- and inserts into into the URL scheme." created="Mon, 07 Jul 2014 19:51:09 GMT" />
				<source:outline text="Now, if we would rather get the raw image URL, we choose &quot;image&quot; after the lc-callback. It also performs a `&quot;` split and sends that output to Drafts, but it instead triggers the _insta-api-url_ action. [Import it into Drafts](drafts://x-callback-url/import_action?type=URL&amp;name=insta-api-url&amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Ftext%3D%5B%5Bline%7C16%5D%5D%26method%3Dunescape) or enter the following URL action:" created="Mon, 07 Jul 2014 19:51:33 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?text=[[line|16]]&amp;method=unescape" created="Mon, 07 Jul 2014 19:54:54 GMT" />
				<source:outline text="Line 16 -- the raw image URL -- is sent to TextTool. Why? All the forward slashes in the URL are &quot;escaped&quot; " created="Mon, 07 Jul 2014 19:54:56 GMT" />
				<source:outline text="       http:\/\/photos-d.ak.instagram.com\/hphotos-ak-xfp1\/10537269_595401073912091_331298792_n.jpg" created="Mon, 07 Jul 2014 19:55:55 GMT" />
				<source:outline text="so we have to unescape them:" created="Mon, 07 Jul 2014 19:56:15 GMT" />
				<source:outline text="       http://photos-d.ak.instagram.com/hphotos-ak-xfp1/10537269_595401073912091_331298792_n.jpg" created="Mon, 07 Jul 2014 19:56:20 GMT" />
				<source:outline text="This action stops at TextTool. It has sharing features, so you can do what you like with URL: e.g., download the image." created="Mon, 07 Jul 2014 19:56:39 GMT" />
				<source:outline text="To make the action icon look nice, I added `lc-icon=instagram`." created="Mon, 07 Jul 2014 20:08:08 GMT" />
				<source:outline text="Granted, this LCP action is not fluid. I think it would possible to perform the conversion without the &quot;Copy All&quot; and lc-callback using the JSON parser in Pythonista, but I'm not proficient enough to accomplish that as of this writing. If you write an action that accomplishes the conversion with fewer steps, I would love to hear from you in the comments section or on Twitter." created="Mon, 07 Jul 2014 19:57:29 GMT" />
				<source:outline text="**Thanks** to @epramono and @youens on Twitter for helping me to understand LCP 2.3.x at a deeper level." created="Mon, 07 Jul 2014 20:08:31 GMT" />
				</source:outline>
			<pubDate>Mon, 07 Jul 2014 18:38:49 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/07/convertTumblrAndInstagramPostWebLinksToIosUrlSchemesWithTheseLaunchCenterProActions.html</guid>
			</item>
		<item>
			<title>Command Line Script for &quot;Paperless: Lists + Checklists&quot;</title>
			<link>http://blog.jeffreykishner.com/2014/07/07/commandLineScriptForPaperlessListsChecklists.html</link>
			<description>
				&lt;p&gt;I use &lt;a href=&quot;http://www.crushapps.com/paperless/&quot;&gt;Paperless&lt;/a&gt; for the majority of my list-making on my iOS devices. I've already written &lt;a href=&quot;http://blog.jeffreykishner.com/2014/02/06/how-to-mark-a-paperless-item-as-complete-without-touching-your-ios-device.html&quot;&gt;how to mark an item as complete without using the app&lt;/a&gt; and &lt;a href=&quot;http://blog.jeffreykishner.com/2014/01/31/view-your-paperless-lists-on-the-web.html&quot;&gt;how to view your lists on the web&lt;/a&gt;. Today, I am going to share a unix command line bash script to &quot;print&quot; incomplete items from a list. &lt;/p&gt;

&lt;p&gt;I created a text file called &quot;prl&quot; and put it in /usr/local/bin/:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/bash

list=$1

grep -A 1 \&amp;lt;dateCompleted\&amp;gt;\&amp;lt;\/dateCompleted\&amp;gt; ~/Dropbox/Paperless/$list.xml | sed -n 's:.*&amp;lt;itemName&amp;gt;\(.*\)&amp;lt;/itemName&amp;gt;.*:\1:p'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I made it executable while in that directory: &lt;code&gt;chmod +x prl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, to view the incomplete items in any list, I just type &lt;code&gt;prl&lt;/code&gt; followed by the list name. If I have a list named Bills, I just type &lt;code&gt;prl Bills&lt;/code&gt; and the script will output all bills that are due. (This script does not output the notes field.)&lt;/p&gt;

&lt;h3&gt;How It Works&lt;/h3&gt;

&lt;p&gt;All your Paperless lists are stored as XML files. I use &lt;em&gt;grep&lt;/em&gt; to look for all items for which there is no completion date: &lt;code&gt;&amp;lt;dateCompleted&amp;gt;&amp;lt;/dateCompleted&amp;gt;&lt;/code&gt; with &lt;em&gt;-A 1&lt;/em&gt; to also print out the lines immediately after each match (which are the list items themselves). Those results are piped into a &lt;em&gt;sed&lt;/em&gt; which extracts any string sandwiched between &lt;code&gt;&amp;lt;itemName&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/itemName&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If I need to see a note, I can do a quick &lt;em&gt;grep&lt;/em&gt;: &lt;code&gt;grep -A 1 verizon ~/Dropbox/Paperless/Bills.xml&lt;/code&gt;. This will output all lines matching &lt;em&gt;verizon&lt;/em&gt; plus the lines immediately following, including the XML tags. It's not pretty but it will get me the info I need (e.g., the due date).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;itemName&amp;gt;Verizon $100.00&amp;lt;/itemName&amp;gt;

&amp;lt;itemNote&amp;gt;7/7&amp;lt;/itemNote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
				</description>
			<source:outline text="Command Line Script for &quot;Paperless: Lists + Checklists&quot;" created="Mon, 07 Jul 2014 16:30:32 GMT" type="outline" name="commandLineScriptForPaperlessListsChecklists" >
				<source:outline text="I use &quot;Paperless&quot; for the majority of my list-making on my iOS devices. I've already written [how to mark an item as complete without using the app](http://blog.jeffreykishner.com/2014/02/06/how-to-mark-a-paperless-item-as-complete-without-touching-your-ios-device.html) and [how to view your lists on the web](http://blog.jeffreykishner.com/2014/01/31/view-your-paperless-lists-on-the-web.html). Today, I am going to share a unix command line bash script to &quot;print&quot; incomplete items from a list. " created="Mon, 07 Jul 2014 16:31:12 GMT" />
				<source:outline text="I created a text file called &quot;prl&quot; and put it in /usr/local/bin/:" created="Mon, 07 Jul 2014 16:33:57 GMT" />
				<source:outline text="    #! /bin/bash" />
				<source:outline text="    list=$1" created="Mon, 07 Jul 2014 16:14:34 GMT" />
				<source:outline text="    grep -A 1 \&lt;dateCompleted\&gt;\&lt;\/dateCompleted\&gt; ~/Dropbox/Paperless/$list.xml | sed -n 's:.*&lt;itemName&gt;\(.*\)&lt;/itemName&gt;.*:\1:p'" />
				<source:outline text="I made it executable while in that directory: `chmod +x prl`" created="Mon, 07 Jul 2014 16:36:34 GMT" />
				<source:outline text="Now, to view the incomplete items in any list, I just type `prl` followed by the list name. If I have a list named Bills, I just type `prl Bills` and the script will output all bills that are due. (This script does not output the notes field.)" created="Mon, 07 Jul 2014 16:36:57 GMT" />
				<source:outline text="###How It Works" created="Mon, 07 Jul 2014 16:38:09 GMT" />
				<source:outline text="All your Paperless lists are stored as XML files. I use _grep_ to look for all items for which there is no completion date: `&lt;dateCompleted&gt;&lt;/dateCompleted&gt;` with _-A 1_ to also print out the lines immediately after each match (which are the list items themselves). Those results are piped into a _sed_ which extracts any string sandwiched between `&lt;itemName&gt;` and `&lt;/itemName&gt;`." created="Mon, 07 Jul 2014 16:38:13 GMT" />
				<source:outline text="If I need to see a note, I can do a quick _grep_: `grep -A 1 verizon ~/Dropbox/Paperless/Bills.xml`. This will output all lines matching _verizon_ plus the lines immediately following, including the XML tags. It's not pretty but it will get me the info I need (e.g., the due date)." created="Mon, 07 Jul 2014 16:44:22 GMT" />
				<source:outline text="    &lt;itemName&gt;Verizon $100.00&lt;/itemName&gt;" />
				<source:outline text="    &lt;itemNote&gt;7/7&lt;/itemNote&gt;" />
				</source:outline>
			<pubDate>Mon, 07 Jul 2014 16:30:32 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/07/commandLineScriptForPaperlessListsChecklists.html</guid>
			</item>
		<item>
			<title>Cloud Services and Social Networking on the Linux Command Line</title>
			<link>http://blog.jeffreykishner.com/2014/07/03/cloudServicesAndSocialNetworkingOnTheLinuxCommandLine.html</link>
			<description>
				&lt;p&gt;I'm amazed at all the stuff that's available:&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; &lt;a href=&quot;https://www.dropbox.com/install?os=lnx&quot;&gt;Dropbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://www.geeknote.me/&quot;&gt;An Evernote Client&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://www.floodgap.com/software/ttytter/&quot;&gt;A Twitter Client&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a keyboard-shortcut fanatic; adding a note to Evernote with syntax like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;geeknote create --title &quot;A Title&quot; --content &quot;Some content.&quot; --tags &quot;tag1&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;beats the evernote.com web interface hands down.&lt;/p&gt;

&lt;p&gt;Granted, the cli doesn't support images, and since I'm ssh-ing into a VPS I can't open media from the command line, but for quick data input/output, nothing beats it. (I'm faster at typing on a physical keyboard than on an iPhone.)&lt;/p&gt;
				</description>
			<source:outline text="Cloud Services and Social Networking on the Linux Command Line" created="Thu, 03 Jul 2014 16:53:19 GMT" type="outline" name="cloudServicesAndSocialNetworkingOnTheLinuxCommandLine" >
				<source:outline text="I'm amazed at all the stuff that's available:" created="Thu, 03 Jul 2014 16:53:42 GMT" />
				<source:outline text="&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; [Dropbox](https://www.dropbox.com/install?os=lnx)" created="Thu, 03 Jul 2014 16:54:06 GMT" />
				<source:outline text="&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; [An Evernote Client](http://www.geeknote.me/)" created="Thu, 03 Jul 2014 16:54:39 GMT" />
				<source:outline text="&lt;i class=&quot;fa fa-chevron-circle-right&quot;&gt;&lt;/i&gt; [A Twitter Client](http://www.floodgap.com/software/ttytter/)" created="Thu, 03 Jul 2014 16:55:02 GMT" />
				<source:outline text="I am a keyboard-shortcut fanatic; adding a note to Evernote with syntax like" created="Thu, 03 Jul 2014 16:55:51 GMT" />
				<source:outline text="    geeknote create --title &quot;A Title&quot; --content &quot;Some content.&quot; --tags &quot;tag1&quot;" created="Thu, 03 Jul 2014 16:56:35 GMT" />
				<source:outline text="beats the evernote.com web interface hands down." created="Thu, 03 Jul 2014 16:57:20 GMT" />
				<source:outline text="Granted, the cli doesn't support images, and since I'm ssh-ing into a VPS I can't open media from the command line, but for quick data input/output, nothing beats it. (I'm faster at typing on a physical keyboard than on an iPhone.)" created="Thu, 03 Jul 2014 17:00:00 GMT" />
				</source:outline>
			<pubDate>Thu, 03 Jul 2014 16:53:19 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/03/cloudServicesAndSocialNetworkingOnTheLinuxCommandLine.html</guid>
			</item>
		<item>
			<title>Update to My OPML-to-WordPress Plugin</title>
			<link>http://blog.jeffreykishner.com/2014/07/02/updateToMyOpmltowordpressPlugin.html</link>
			<description>
				&lt;p&gt;Today I have released v 2.0 of my plugin, which renders a Fargo OPML file on a WordPress page or blog post using a simple shortcode. The updated version supports the link-blog format (type=&quot;idea&quot;). &lt;/p&gt;

&lt;p&gt;View the update and download the zip file &lt;a href=&quot;http://jeffreykishner.com/wordpress-plugins/post-opml-to-wordpress/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
				</description>
			<source:outline text="Update to My OPML-to-WordPress Plugin" created="Wed, 02 Jul 2014 15:42:41 GMT" type="outline" name="updateToMyOpmltowordpressPlugin" >
				<source:outline text="Today I have released v 2.0 of my plugin, which renders a Fargo OPML file on a WordPress page or blog post using a simple shortcode. The updated version supports the link-blog format (type=&quot;idea&quot;). " created="Wed, 02 Jul 2014 15:42:59 GMT" />
				<source:outline text="View the update and download the zip file [here](http://jeffreykishner.com/wordpress-plugins/post-opml-to-wordpress/)." created="Wed, 02 Jul 2014 15:44:49 GMT" />
				</source:outline>
			<pubDate>Wed, 02 Jul 2014 15:42:41 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/02/updateToMyOpmltowordpressPlugin.html</guid>
			</item>
		<item>
			<title>Get a Direct Link to Any Note in Evernote for iOS</title>
			<link>http://blog.jeffreykishner.com/2014/07/01/getADirectLinkToAnyNoteInEvernoteForIos.html</link>
			<description>
				&lt;p&gt;&lt;em&gt;I take credit for none of the following (other than a few personal tweaks) -- just wanting to share &lt;a href=&quot;https://discussion.evernote.com/topic/39792-cant-create-note-links-in-en-ios-clients/&quot;&gt;this solution&lt;/a&gt; by &lt;a href=&quot;https://plus.google.com/108788174443222624607/posts&quot;&gt;Stephen May&lt;/a&gt; because it's so cool.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Evernote does not have much of an url scheme beyond &lt;code&gt;evernote://&lt;/code&gt; which is not terrible useful for productivity nerds. This solution creates a link that will bring you directly to the note of your choice. It requires &lt;a href=&quot;http://omz-software.com/pythonista/&quot;&gt;Pythonista&lt;/a&gt;, &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt;, and &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, you will need to grab some personal information about your Evernote account, and the only way I know how to find it is via the Mac OS X app. In the left sidebar, &lt;a href=&quot;http://blog.evernote.com/blog/2013/08/02/quick-tip-how-to-use-note-links/&quot;&gt;right-click on any note and get the note's link&lt;/a&gt;. At the beginning of the link, there will be a six digit string and another digit or two following an &lt;code&gt;s&lt;/code&gt;. You will need this information for a future step. &lt;/p&gt;

&lt;p&gt;Add the following to Pythonista. You can title it &lt;code&gt;Evernote Link&lt;/code&gt; or whatever you like. Where it says &lt;code&gt;evernote:///view/123456/s4/&lt;/code&gt; you will replace the six digit string and the &lt;code&gt;s4&lt;/code&gt; with the information from the note link you copied from the desktop app. Where it says &lt;code&gt;https://www.evernote.com/shard/s4/sh/&lt;/code&gt; replace the &lt;code&gt;s4&lt;/code&gt; with the &lt;code&gt;s..&lt;/code&gt; from your original note link.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import clipboard

import sys

import webbrowser

import console

import urllib

mytext = (sys.argv[1])

head, sep, tail = mytext.rpartition('/')

parttwo = head.replace('https://www.evernote.com/shard/s4/sh/', '')

evernoteurl = ('evernote:///view/123456/s4/' + parttwo + '/' + parttwo + '/')

webbrowser.open('drafts://x-callback-url/create?text=' + evernoteurl + '&amp;amp;action=Copy%20to%20Clipboard&amp;amp;afterSuccess=Nothing')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then add the following action in LCP:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pythonista://EvernoteLink?action=run&amp;amp;argv=[clipboard]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;How to Get Your Link&lt;/h3&gt;

&lt;p&gt;Go to the Evernote app and tap on any note. Choose &quot;Share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&quot; and then &quot;Copy link.&quot; Then tap on the LCP action. After the script runs, the direct Evernote link will be in a new draft in Drafts, and also copied to the clipboard. If you make links clickable in Drafts and tap on the link, it will bring you right to that note in Evernote. &lt;/p&gt;

&lt;p&gt;If you care about the privacy of your note, then tap on &quot;Share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&quot; again and choose &quot;Stop sharing.&quot; Your direct link will still work.&lt;/p&gt;
				</description>
			<source:outline text="Get a Direct Link to Any Note in Evernote for iOS" created="Tue, 01 Jul 2014 13:37:23 GMT" type="outline" name="getADirectLinkToAnyNoteInEvernoteForIos" >
				<source:outline text="_I take credit for none of the following (other than a few personal tweaks) -- just wanting to share [this solution](https://discussion.evernote.com/topic/39792-cant-create-note-links-in-en-ios-clients/) by [Stephen May](https://plus.google.com/108788174443222624607/posts) because it's so cool._" created="Tue, 01 Jul 2014 13:44:30 GMT" />
				<source:outline text="Evernote does not have much of an url scheme beyond `evernote://` which is not terrible useful for productivity nerds. This solution creates a link that will bring you directly to the note of your choice. It requires &quot;Pythonista&quot;, &quot;Drafts&quot;, and &quot;Launch Center Pro&quot;." created="Tue, 01 Jul 2014 13:44:54 GMT" />
				<source:outline text="First, you will need to grab some personal information about your Evernote account, and the only way I know how to find it is via the Mac OS X app. In the left sidebar, [right-click on any note and get the note's link](http://blog.evernote.com/blog/2013/08/02/quick-tip-how-to-use-note-links/). At the beginning of the link, there will be a six digit string and another digit or two following an `s`. You will need this information for a future step. " created="Tue, 01 Jul 2014 13:51:29 GMT" />
				<source:outline text="Add the following to Pythonista. You can title it `Evernote Link` or whatever you like. Where it says `evernote:///view/123456/s4/` you will replace the six digit string and the `s4` with the information from the note link you copied from the desktop app. Where it says `https://www.evernote.com/shard/s4/sh/` replace the `s4` with the `s..` from your original note link." created="Tue, 01 Jul 2014 13:54:35 GMT" />
				<source:outline text="    import clipboard" />
				<source:outline text="    import sys" />
				<source:outline text="    import webbrowser" />
				<source:outline text="    import console" />
				<source:outline text="    import urllib" />
				<source:outline text="    mytext = (sys.argv[1])" />
				<source:outline text="    head, sep, tail = mytext.rpartition('/')" />
				<source:outline text="    parttwo = head.replace('https://www.evernote.com/shard/s4/sh/', '')" />
				<source:outline text="    evernoteurl = ('evernote:///view/123456/s4/' + parttwo + '/' + parttwo + '/')" />
				<source:outline text="    webbrowser.open('drafts://x-callback-url/create?text=' + evernoteurl + '&amp;action=Copy%20to%20Clipboard&amp;afterSuccess=Nothing')" />
				<source:outline text="Then add the following action in LCP:" created="Tue, 01 Jul 2014 13:57:07 GMT" />
				<source:outline text="    pythonista://EvernoteLink?action=run&amp;argv=[clipboard]" created="Tue, 01 Jul 2014 13:57:15 GMT" />
				<source:outline text="### How to Get Your Link" created="Tue, 01 Jul 2014 13:58:07 GMT" />
				<source:outline text="Go to the Evernote app and tap on any note. Choose &quot;Share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&quot; and then &quot;Copy link.&quot; Then tap on the LCP action. After the script runs, the direct Evernote link will be in a new draft in Drafts, and also copied to the clipboard. If you make links clickable in Drafts and tap on the link, it will bring you right to that note in Evernote. " created="Tue, 01 Jul 2014 13:58:20 GMT" />
				<source:outline text="If you care about the privacy of your note, then tap on &quot;Share &lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&quot; again and choose &quot;Stop sharing.&quot; Your direct link will still work." created="Tue, 01 Jul 2014 14:02:02 GMT" />
				</source:outline>
			<pubDate>Tue, 01 Jul 2014 13:37:23 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/07/01/getADirectLinkToAnyNoteInEvernoteForIos.html</guid>
			</item>
		<item>
			<title>Desktop Bookmarklet to Send Email via Fastmail With Document Title and URL</title>
			<link>http://blog.jeffreykishner.com/2014/06/30/desktopBookmarkletToSendEmailViaFastmailWithDocumentTitleAndUrl.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=Desktop%20Bookmarklet%20to%20Send%20Email%20via%20Fastmail%20With%20Document%20Title%20and%20URL&amp;amp;url=http://blog.jeffreykishner.com/2014/06/30/desktopBookmarkletToSendEmailViaFastmailWithDocumentTitleAndUrl.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're a &lt;a href=&quot;http://fastmail.fm&quot;&gt;Fastmail.fm&lt;/a&gt; user, you can use this bookmarklet to automatically compose an email to your favorite person in Fastmail's web interface. The subject line is the title of the web page, and the body includes the link. Then just hit Cmd-Return to send.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javascript:window.location='https://www.fastmail.fm/action/compose/?to=username@domain.com&amp;amp;subject='+encodeURIComponent(document.title)+'&amp;amp;body='+encodeURIComponent(location.href)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Make sure to replace &lt;code&gt;username@domain.com&lt;/code&gt; with a working email address.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt; &lt;a href=&quot;http://fastmail.wikia.com/wiki/Mailto_url&quot;&gt;Fastmail Wiki&lt;/a&gt;&lt;/p&gt;
				</description>
			<source:outline text="Desktop Bookmarklet to Send Email via Fastmail With Document Title and URL" created="Mon, 30 Jun 2014 16:15:07 GMT" type="outline" name="desktopBookmarkletToSendEmailViaFastmailWithDocumentTitleAndUrl" >
				<source:outline text="Tweet This Post" created="Mon, 30 Jun 2014 16:19:17 GMT" type="link" url="https://twitter.com/share?text=Desktop%20Bookmarklet%20to%20Send%20Email%20via%20Fastmail%20With%20Document%20Title%20and%20URL&amp;url=http://blog.jeffreykishner.com/2014/06/30/desktopBookmarkletToSendEmailViaFastmailWithDocumentTitleAndUrl.html" icon="twitter-sign" name="tweetThisPost" />
				<source:outline text="If you're a [Fastmail.fm](http://fastmail.fm) user, you can use this bookmarklet to automatically compose an email to your favorite person in Fastmail's web interface. The subject line is the title of the web page, and the body includes the link. Then just hit Cmd-Return to send." created="Mon, 30 Jun 2014 16:16:09 GMT" />
				<source:outline text="    javascript:window.location='https://www.fastmail.fm/action/compose/?to=username@domain.com&amp;subject='+encodeURIComponent(document.title)+'&amp;body='+encodeURIComponent(location.href)" created="Mon, 30 Jun 2014 16:15:42 GMT" />
				<source:outline text="(Make sure to replace `username@domain.com` with a working email address.)" created="Mon, 30 Jun 2014 16:19:31 GMT" />
				<source:outline text="**Reference:** [Fastmail Wiki](http://fastmail.wikia.com/wiki/Mailto_url)" created="Mon, 30 Jun 2014 16:18:44 GMT" />
				</source:outline>
			<pubDate>Mon, 30 Jun 2014 16:15:07 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/30/desktopBookmarkletToSendEmailViaFastmailWithDocumentTitleAndUrl.html</guid>
			</item>
		<item>
			<title>Automate a YouTube Embed Code on Your iOS Device With Drafts, TextTool, and Launch Center Pro</title>
			<link>http://blog.jeffreykishner.com/2014/06/30/automateAYoutubeEmbedCodeOnYourIosDeviceWithDraftsTexttoolAndLaunchCenterPro.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=Automate%20a%20YouTube%20Embed%20Code%20on%20Your%20iOS%20Device%20With%20Drafts%2C%20TextTool%2C%20and%20Launch%20Center%20Pro&amp;amp;url=http://blog.jeffreykishner.com/2014/06/30/automateAYoutubeEmbedCodeOnYourIosDeviceWithDraftsTexttoolAndLaunchCenterPro.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the weekend I wanted to embed a video on my blog while on my iPad. The mobile YouTube site did not appear to offer an embed code, so I created a few actions to automate the process.&lt;/p&gt;

&lt;p&gt;As an example, here is the starting URL &lt;code&gt;https://m.youtube.com/watch?v=38lY-3g6mn8&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This browser bookmarklet -- I call it &quot;TextTool Split&quot; -- imports the URL into &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt; and triggers the &quot;split&quot; action:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javascript:window.location='drafts://x-callback-url/create?action=split&amp;amp;text='+encodeURIComponent(location.href)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &quot;split&quot; URL action sends the URL to &lt;a href=&quot;http://blackfoggames.com/TextTool/&quot;&gt;TextTool&lt;/a&gt; and splits the URL at the &lt;code&gt;=&lt;/code&gt;. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;texttool://x-callback-url/transform?method=split&amp;amp;delimiter=%3D&amp;amp;text=[[draft]]&amp;amp;x-success={{drafts://x-callback-url/create?text=[[output]]&amp;amp;action=line2-youtube}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Import it &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=split&amp;amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Fmethod%3Dsplit%26delimiter%3D%253D%26text%3D%5B%5Bdraft%5D%5D%26x-success%3D%7B%7Bdrafts%3A%2F%2Fx-callback-url%2Fcreate%3Ftext%3D%5B%5Boutput%5D%5D%26action%3Dline2-youtube%7D%7D&quot;&gt;here&lt;/a&gt; into Drafts.&lt;/p&gt;

&lt;p&gt;The above action takes the original URL and creates a new draft:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://m.youtube.com/watch?v

38lY-3g6mn8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It then triggers the &lt;code&gt;line2-youtube&lt;/code&gt; action, which takes &lt;code&gt;line 2&lt;/code&gt;, sticks it in the YouTube embed code, and saves all of that to the clipboard with the help of &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;launch://clipboard?text={{&amp;lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/[[line|2]]&quot; frameborder=&quot;0&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Import it &lt;a href=&quot;drafts://x-callback-url/import_action?type=URL&amp;amp;name=line2-youtube&amp;amp;url=launch%3A%2F%2Fclipboard%3Ftext%3D%7B%7B%3Ciframe%20width%3D%22560%22%20height%3D%22315%22%20src%3D%22%2F%2Fwww.youtube.com%2Fembed%2F%5B%5Bline%7C2%5D%5D%22%20frameborder%3D%220%22%20allowfullscreen%3E%3C%2Fiframe%3E%7D%7D&quot;&gt;here&lt;/a&gt; into Drafts.&lt;/p&gt;

&lt;p&gt;The result will be that the following is added to your clipboard, and you can paste it into your blog CMS:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/38lY-3g6mn8&quot; frameborder=&quot;0&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This action presumes that there are no additional paramaters in the URL. If your URL has something like &lt;code&gt;&amp;amp;list=&lt;/code&gt; after the video ID, you will either have to manually remove that string or create an extra Drafts/TextTool action to split the results of &lt;code&gt;line 2&lt;/code&gt; at the &lt;code&gt;&amp;amp;&lt;/code&gt; and to take &lt;code&gt;line 1&lt;/code&gt; of &lt;em&gt;that&lt;/em&gt; output.&lt;/p&gt;
				</description>
			<source:outline text="Automate a YouTube Embed Code on Your iOS Device With Drafts, TextTool, and Launch Center Pro" created="Mon, 30 Jun 2014 14:03:42 GMT" type="outline" name="automateAYoutubeEmbedCodeOnYourIosDeviceWithDraftsTexttoolAndLaunchCenterPro" >
				<source:outline text="Tweet This Post" created="Mon, 30 Jun 2014 14:34:04 GMT" type="link" url="https://twitter.com/share?text=Automate%20a%20YouTube%20Embed%20Code%20on%20Your%20iOS%20Device%20With%20Drafts%2C%20TextTool%2C%20and%20Launch%20Center%20Pro&amp;url=http://blog.jeffreykishner.com/2014/06/30/automateAYoutubeEmbedCodeOnYourIosDeviceWithDraftsTexttoolAndLaunchCenterPro.html" icon="twitter-sign" name="tweetThisPost" />
				<source:outline text="Over the weekend I wanted to embed a video on my blog while on my iPad. The mobile YouTube site did not appear to offer an embed code, so I created a few actions to automate the process." created="Mon, 30 Jun 2014 14:05:54 GMT" />
				<source:outline text="As an example, here is the starting URL `https://m.youtube.com/watch?v=38lY-3g6mn8`." created="Mon, 30 Jun 2014 14:24:47 GMT" />
				<source:outline text="This browser bookmarklet -- I call it &quot;TextTool Split&quot; -- imports the URL into &quot;Drafts&quot; and triggers the &quot;split&quot; action:" created="Mon, 30 Jun 2014 14:06:47 GMT" />
				<source:outline text="    javascript:window.location='drafts://x-callback-url/create?action=split&amp;text='+encodeURIComponent(location.href)" created="Mon, 30 Jun 2014 14:08:48 GMT" />
				<source:outline text="The &quot;split&quot; URL action sends the URL to &quot;TextTool&quot; and splits the URL at the `=`. " created="Mon, 30 Jun 2014 14:08:54 GMT" />
				<source:outline text="    texttool://x-callback-url/transform?method=split&amp;delimiter=%3D&amp;text=[[draft]]&amp;x-success={{drafts://x-callback-url/create?text=[[output]]&amp;action=line2-youtube}}" created="Mon, 30 Jun 2014 14:11:07 GMT" />
				<source:outline text="Import it [here](drafts://x-callback-url/import_action?type=URL&amp;name=split&amp;url=texttool%3A%2F%2Fx-callback-url%2Ftransform%3Fmethod%3Dsplit%26delimiter%3D%253D%26text%3D%5B%5Bdraft%5D%5D%26x-success%3D%7B%7Bdrafts%3A%2F%2Fx-callback-url%2Fcreate%3Ftext%3D%5B%5Boutput%5D%5D%26action%3Dline2-youtube%7D%7D) into Drafts." created="Mon, 30 Jun 2014 14:10:40 GMT" />
				<source:outline text="The above action takes the original URL and creates a new draft:" created="Mon, 30 Jun 2014 14:28:53 GMT" />
				<source:outline text="    https://m.youtube.com/watch?v" created="Mon, 30 Jun 2014 14:29:31 GMT" />
				<source:outline text="    38lY-3g6mn8" created="Mon, 30 Jun 2014 14:29:37 GMT" />
				<source:outline text="It then triggers the `line2-youtube` action, which takes `line 2`, sticks it in the YouTube embed code, and saves all of that to the clipboard with the help of &quot;Launch Center Pro&quot;:" created="Mon, 30 Jun 2014 14:29:40 GMT" />
				<source:outline text="    launch://clipboard?text={{&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/[[line|2]]&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;}}" created="Mon, 30 Jun 2014 14:32:45 GMT" />
				<source:outline text="Import it [here](drafts://x-callback-url/import_action?type=URL&amp;name=line2-youtube&amp;url=launch%3A%2F%2Fclipboard%3Ftext%3D%7B%7B%3Ciframe%20width%3D%22560%22%20height%3D%22315%22%20src%3D%22%2F%2Fwww.youtube.com%2Fembed%2F%5B%5Bline%7C2%5D%5D%22%20frameborder%3D%220%22%20allowfullscreen%3E%3C%2Fiframe%3E%7D%7D) into Drafts." created="Mon, 30 Jun 2014 14:32:15 GMT" />
				<source:outline text="The result will be that the following is added to your clipboard, and you can paste it into your blog CMS:" created="Mon, 30 Jun 2014 14:33:09 GMT" />
				<source:outline text="    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/38lY-3g6mn8&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;" created="Mon, 30 Jun 2014 14:33:28 GMT" />
				<source:outline text=" This action presumes that there are no additional paramaters in the URL. If your URL has something like `&amp;list=` after the video ID, you will either have to manually remove that string or create an extra Drafts/TextTool action to split the results of `line 2` at the `&amp;` and to take `line 1` of _that_ output." created="Mon, 30 Jun 2014 14:27:49 GMT" />
				</source:outline>
			<pubDate>Mon, 30 Jun 2014 14:03:42 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/30/automateAYoutubeEmbedCodeOnYourIosDeviceWithDraftsTexttoolAndLaunchCenterPro.html</guid>
			</item>
		<item>
			<title>You're My Gay Best Friend (Video)</title>
			<link>http://blog.jeffreykishner.com/2014/06/29/youreMyGayBestFriendVideo.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=You're%20My%20Gay%20Best%20Friend%20(Video)&amp;amp;url=http://blog.jeffreykishner.com/2014/06/29/youreMyGayBestFriendVideo.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're a fan of &lt;em&gt;Frozen&lt;/em&gt;, you may find this lol funny:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/38lY-3g6mn8&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
				</description>
			<source:outline text="You're My Gay Best Friend (Video)" created="Sun, 29 Jun 2014 19:04:56 GMT" type="outline" name="youreMyGayBestFriendVideo" >
				<source:outline text="Tweet This Post" created="Sun, 29 Jun 2014 19:08:41 GMT" type="link" url="https://twitter.com/share?text=You're%20My%20Gay%20Best%20Friend%20(Video)&amp;url=http://blog.jeffreykishner.com/2014/06/29/youreMyGayBestFriendVideo.html" icon="twitter-sign" name="tweetThisPost" />
				<source:outline text="If you're a fan of _Frozen_, you may find this lol funny:" created="Sun, 29 Jun 2014 19:05:49 GMT" />
				<source:outline text="&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/38lY-3g6mn8&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;" created="Sun, 29 Jun 2014 19:08:14 GMT" />
				</source:outline>
			<pubDate>Sun, 29 Jun 2014 19:04:56 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/29/youreMyGayBestFriendVideo.html</guid>
			</item>
		<item>
			<title>Embedding Happy Friends Tweets in Fargo</title>
			<link>http://blog.jeffreykishner.com/2014/06/27/embeddingHappyFriendsTweetsInFargo.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=Embedding%20Happy%20Friends%20Tweets%20in%20Fargo&amp;amp;url=http://blog.jeffreykishner.com/2014/06/27/embeddingHappyFriendsTweetsInFargo.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/27/happyFriends042.html&quot;&gt;Happy Friends&lt;/a&gt; and &lt;a href=&quot;http://fargo.io/blog/2014/06/27/fargo162/&quot;&gt;Fargo&lt;/a&gt; are now working together.  &lt;/p&gt;

&lt;p&gt;The tweet below is just a headline copied from my &quot;watched&quot; Happy Friends tab in Fargo. It has the following attributes associated with it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/s/8fg5hj5wsosefzt/Screenshot%202014-06-27%2015.59.48.png&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Friends 0.42 has the ability to publish your outline of tweets. A feature picked up in the new Fargo. &lt;a href=&quot;http://t.co/8bXP3DnCNv&quot;&gt;http://t.co/8bXP3DnCNv&lt;/a&gt;&lt;/p&gt;
				</description>
			<source:outline text="Embedding Happy Friends Tweets in Fargo" created="Fri, 27 Jun 2014 17:06:35 GMT" type="outline" name="embeddingHappyFriendsTweetsInFargo" >
				<source:outline text="Tweet This Post" created="Fri, 27 Jun 2014 17:11:12 GMT" type="link" url="https://twitter.com/share?text=Embedding%20Happy%20Friends%20Tweets%20in%20Fargo&amp;url=http://blog.jeffreykishner.com/2014/06/27/embeddingHappyFriendsTweetsInFargo.html" icon="twitter-sign" />
				<source:outline text="[Happy Friends](http://happy.smallpict.com/2014/06/27/happyFriends042.html) and [Fargo](http://fargo.io/blog/2014/06/27/fargo162/) are now working together.  " created="Fri, 27 Jun 2014 17:06:53 GMT" />
				<source:outline text="The tweet below is just a headline copied from my &quot;watched&quot; Happy Friends tab in Fargo. It has the following attributes associated with it:" created="Fri, 27 Jun 2014 17:08:06 GMT" />
				<source:outline text="![](https://dl.dropboxusercontent.com/s/8fg5hj5wsosefzt/Screenshot%202014-06-27%2015.59.48.png)" created="Fri, 27 Jun 2014 17:08:55 GMT" />
				<source:outline text="Happy Friends 0.42 has the ability to publish your outline of tweets. A feature picked up in the new Fargo. &lt;a href=&quot;http://t.co/8bXP3DnCNv&quot;&gt;http://t.co/8bXP3DnCNv&lt;/a&gt;" created="Fri Jun 27 17:05:04 +0000 2014" type="tweet" tweetId="482570320197349376" tweetUserName="davewiner" name="happyFriends042HasTheAbilityToPublishYourOutlineOfTweetsAFeaturePickedUpInTheNewFargoHttptco8bxp3dncnv" />
				</source:outline>
			<pubDate>Fri, 27 Jun 2014 17:06:35 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/27/embeddingHappyFriendsTweetsInFargo.html</guid>
			</item>
		<item>
			<title>This Blog Is Now Hosted at Github Pages</title>
			<link>http://blog.jeffreykishner.com/2014/06/26/thisBlogIsNowHostedAtGithubPages.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;http://fargo.io&quot;&gt;Fargo&lt;/a&gt; -- the CMS outliner I use to publish this site -- has the ability to &lt;a href=&quot;http://fargo.io/docs/contentManagement/usingGithub.html&quot;&gt;publish to GitHub Pages&lt;/a&gt;. I have long wanted to do this. I don't want a *.smallpict.com blog, I want to publish to blog.jeffreykishner.com. I could do this back when Fargo was using Trex (its original CMS), but Dave Winer did a complete rewrite, and mapping a CNAME to a smallpict blog no longer worked. &lt;a href=&quot;https://github.com/scripting/fargoPublisher&quot;&gt;FargoPublisher&lt;/a&gt; is too complicated for me to set up, and I know &lt;em&gt;just enough&lt;/em&gt; GitHub to push commits to a repository from a subdirectory in Dropbox, so I chose the latter route.&lt;/p&gt;

&lt;p&gt;The problem I've encountered for months: I don't blog at home, and I cannot sync Dropbox at the computer where I &lt;em&gt;do&lt;/em&gt; blog. Hence, I cannot push commits from &lt;code&gt;/Dropbox/Apps/smallPicture/jkishner.github.io&lt;/code&gt; (where Fargo renders the HTML of my blog) to GitHub locally. I tried -- and failed -- to configure my AirPort Extreme at home to have a stable IP address so that I could SSH into my MacMini at home from another computer. That way I could sync Dropbox on my MacMini, and then push commits remotely to GitHub. &lt;/p&gt;

&lt;p&gt;Only a few days ago, I realized that I have a &quot;box&quot; where I can do all this: the VPS that I rent from &lt;a href=&quot;http://wiredtree.com&quot;&gt;WiredTree&lt;/a&gt;. Over the past few days, I have installed GitHub, Dropbox, and the Dropbox CLI (command line interface) into the root of my VPS. It was complicated -- WiredTree had to install a parallel version of Python so that &lt;code&gt;dropbox.py&lt;/code&gt; could work, and a sysadmin there also changed a key file to allow Dropbox to monitor all the folders in my account -- but I got it to work. Now I can blog on Fargo, ssh into my root, make sure Dropbox has synced my jkishner.github.io folder, and add/commit/push changes. I set up a CNAME redirect so that jkishner.github.io will be viewable at blog.jeffreykishner.com, and it all &lt;em&gt;works&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I used to use a web service called &lt;a href=&quot;http://mover.io&quot;&gt;Mover&lt;/a&gt; that allowed me to FTP all the files in a specific Dropbox folder to the /blog directory on jeffreykishner.com, but the GitHub solution is faster because only the updated files are uploaded -- not my entire blog -- when I want to publish.&lt;/p&gt;
				</description>
			<source:outline text="This Blog Is Now Hosted at Github Pages" created="Thu, 26 Jun 2014 20:29:28 GMT" type="outline" name="thisBlogIsNowHostedAtGithubPages" >
				<source:outline text="[Fargo](http://fargo.io) -- the CMS outliner I use to publish this site -- has the ability to [publish to GitHub Pages](http://fargo.io/docs/contentManagement/usingGithub.html). I have long wanted to do this. I don't want a *.smallpict.com blog, I want to publish to blog.jeffreykishner.com. I could do this back when Fargo was using Trex (its original CMS), but Dave Winer did a complete rewrite, and mapping a CNAME to a smallpict blog no longer worked. [FargoPublisher](https://github.com/scripting/fargoPublisher) is too complicated for me to set up, and I know _just enough_ GitHub to push commits to a repository from a subdirectory in Dropbox, so I chose the latter route." created="Thu, 26 Jun 2014 20:29:39 GMT" />
				<source:outline text="The problem I've encountered for months: I don't blog at home, and I cannot sync Dropbox at the computer where I _do_ blog. Hence, I cannot push commits from `/Dropbox/Apps/smallPicture/jkishner.github.io` (where Fargo renders the HTML of my blog) to GitHub locally. I tried -- and failed -- to configure my AirPort Extreme at home to have a stable IP address so that I could SSH into my MacMini at home from another computer. That way I could sync Dropbox on my MacMini, and then push commits remotely to GitHub. " created="Fri, 27 Jun 2014 13:47:46 GMT" />
				<source:outline text="Only a few days ago, I realized that I have a &quot;box&quot; where I can do all this: the VPS that I rent from [WiredTree](http://wiredtree.com). Over the past few days, I have installed GitHub, Dropbox, and the Dropbox CLI (command line interface) into the root of my VPS. It was complicated -- WiredTree had to install a parallel version of Python so that `dropbox.py` could work, and a sysadmin there also changed a key file to allow Dropbox to monitor all the folders in my account -- but I got it to work. Now I can blog on Fargo, ssh into my root, make sure Dropbox has synced my jkishner.github.io folder, and add/commit/push changes. I set up a CNAME redirect so that jkishner.github.io will be viewable at blog.jeffreykishner.com, and it all _works_." created="Fri, 27 Jun 2014 13:50:42 GMT" />
				<source:outline text="I used to use a web service called [Mover](http://mover.io) that allowed me to FTP all the files in a specific Dropbox folder to the /blog directory on jeffreykishner.com, but the GitHub solution is faster because only the updated files are uploaded -- not my entire blog -- when I want to publish." created="Fri, 27 Jun 2014 13:55:38 GMT" />
				</source:outline>
			<pubDate>Thu, 26 Jun 2014 20:29:28 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/26/thisBlogIsNowHostedAtGithubPages.html</guid>
			</item>
		<item>
			<title>iOS Bookmarklet to Open a Spotify Share URL into the App</title>
			<link>http://blog.jeffreykishner.com/2014/06/19/iosBookmarkletToOpenASpotifyShareUrlIntoTheApp.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=iOS%20Bookmarklet%20to%20Open%20a%20Spotify%20Share%20URL%20into%20the%20App&amp;amp;url=http://blog.jeffreykishner.com/2014/06/19/iosBookmarkletToOpenASpotifyShareUrlIntoTheApp.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you get a Spotify share URL like &lt;code&gt;http://open.spotify.com/album/3eAA4fvTVttgUlE43vRVMq&lt;/code&gt; and open it in Safari for iOS, use this bookmarklet to jump directly to that artist/album/track in the app:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javascript:window.location='spotify:'+(window.location.href);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To install, you can either set it as a bookmarklet in Safari for Mac and sync with iCloud, or do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Bookmark any page in Safari for iOS and call it Spotify.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to edit bookmarks, and replace the URL of that bookmark with the javascript above.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
				</description>
			<source:outline text="iOS Bookmarklet to Open a Spotify Share URL into the App" created="Thu, 19 Jun 2014 20:35:31 GMT" type="outline" name="iosBookmarkletToOpenASpotifyShareUrlIntoTheApp" >
				<source:outline text="Tweet This Post" created="Thu, 19 Jun 2014 20:39:58 GMT" type="link" url="https://twitter.com/share?text=iOS%20Bookmarklet%20to%20Open%20a%20Spotify%20Share%20URL%20into%20the%20App&amp;url=http://blog.jeffreykishner.com/2014/06/19/iosBookmarkletToOpenASpotifyShareUrlIntoTheApp.html" icon="twitter-sign" />
				<source:outline text="If you get a Spotify share URL like `http://open.spotify.com/album/3eAA4fvTVttgUlE43vRVMq` and open it in Safari for iOS, use this bookmarklet to jump directly to that artist/album/track in the app:" created="Thu, 19 Jun 2014 20:35:57 GMT" />
				<source:outline text="    javascript:window.location='spotify:'+(window.location.href);" created="Thu, 19 Jun 2014 20:36:46 GMT" />
				<source:outline text="To install, you can either set it as a bookmarklet in Safari for Mac and sync with iCloud, or do the following:" created="Thu, 19 Jun 2014 20:36:50 GMT" />
				<source:outline text="1. Bookmark any page in Safari for iOS and call it Spotify." created="Thu, 19 Jun 2014 20:37:23 GMT" />
				<source:outline text="2. Go to edit bookmarks, and replace the URL of that bookmark with the javascript above." created="Thu, 19 Jun 2014 20:37:43 GMT" />
				</source:outline>
			<pubDate>Thu, 19 Jun 2014 20:35:31 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/19/iosBookmarkletToOpenASpotifyShareUrlIntoTheApp.html</guid>
			</item>
		<item>
			<title>Draft a Text Message for Later with Launch Center Pro 2.3</title>
			<link>http://blog.jeffreykishner.com/2014/06/19/draftsATextMessageForLaterWithLaunchCenterPro23.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=Draft%20a%20Text%20Message%20for%20Later%20with%20Launch%20Center%20Pro%202.3&amp;amp;url=http://blog.jeffreykishner.com/2014/06/19/draftsATextMessageForLaterWithLaunchCenterPro23.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've written a &lt;a href=&quot;http://blog.jeffreykishner.com/2014/01/10/schedule-a-text-x-minutes-from-now-with-due-and-launch-center-pro.html&quot;&gt;previous post&lt;/a&gt; on how to schedule a text message for later with &lt;a href=&quot;http://www.dueapp.com/&quot;&gt;Due&lt;/a&gt; and &lt;a href=&quot;http://contrast.co/launch-center-pro/&quot;&gt;Launch Center Pro&lt;/a&gt;. However, now that LCP's encoding grammar has simplified, I'd like to revisit the topic. First off, an action to save a text in &lt;a href=&quot;http://agiletortoise.com/drafts/&quot;&gt;Drafts&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drafts://x-callback-url/create?text={{launch://messaging?to=8005551212&amp;amp;body=[prompt]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Click on &lt;a href=&quot;launch://import?url=drafts%3A%2F%2Fx-callback-url%2Fcreate%3Ftext%3D%7B%7Blaunch%3A%2F%2Fmessaging%3Fto%3D8005551212%26body%3D%5Bprompt%5D%7D%7D&amp;amp;title=Draft%20SMS&quot;&gt;this link&lt;/a&gt; to import it onto your iOS device.&lt;/p&gt;

&lt;p&gt;Tap on the action, enter your text message, and an encoded &lt;code&gt;launch://messaging&lt;/code&gt; URL scheme is saved in Drafts. When you are ready to send the text message, just make links clickable and tap on the URL scheme. It will open the text message in Messages to the designated recipient (change 8005551212 to his or her cell number).&lt;/p&gt;

&lt;h3&gt;The Contact Picker&lt;/h3&gt;

&lt;p&gt;LCP now has a contact picker -- [contact] -- that will allow you to choose a contact when you start the action. I tried creating the action above by substituting the phone number with [contact] -- the action can be imported  &lt;a href=&quot;https://launchcenterpro.com/z84h43&quot;&gt;here&lt;/a&gt; -- but it does not work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drafts://x-callback-url/create?text={{launch://messaging?to=[contact]&amp;amp;body=[prompt]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem is that the body text is not encoded, so you get something like this:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropbox.com/s/k8163te96f3kbk5/jk2dy.png&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Screenshot by @tahewett&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I could not figure out how to fix this, so I wrote a pretty complicated action that &lt;em&gt;does&lt;/em&gt; do the job. (Import it &lt;a href=&quot;https://launchcenterpro.com/f11cgt&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;launch://x-callback-url/clipboard?text=[contact]&amp;amp;x-success={{texttool://x-callback-url/transform?text=[prompt:your message]&amp;amp;method=encode&amp;amp;clipboard=0&amp;amp;x-success={{drafts:///create?text={{launch://messaging?to=||clipboard||&amp;amp;body=[[output]]}}}}}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;How It Works&lt;/h4&gt;

&lt;p&gt;First, the action asks you to pick a contact, and the number you choose is saved to the clipboard. &lt;/p&gt;

&lt;p&gt;Then the action prompts you to enter your message. &lt;a href=&quot;http://blackfoggames.com/TextTool/&quot;&gt;TextTool&lt;/a&gt; url-encodes your message, but does not save it to the clipboard (because we need the clipboard for the contact's number).&lt;/p&gt;

&lt;p&gt;Then the action tells Drafts to create a new draft, the &lt;code&gt;launch://messaging&lt;/code&gt; action. The body of the message is the [output] value carried from TextTool, and the &lt;code&gt;to&lt;/code&gt; field is the clipboard contents, which -- because it has carried over two different x-successes -- needs to use &lt;code&gt;||clipboard||&lt;/code&gt; to work, as explained &lt;a href=&quot;http://agiletortoise.com/blog/2014/02/13/updates-drafts/&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/create URL scheme now supports a special “||clipboard||” tag within the text parameter, which will substitute the contents of the clipboard at the time the “create” URL is opened. This can be used in an x-success callback URL to allow capture of a clipboard value that changed before returning to Drafts. Note the pipe characters, not brackets. This tag is not evaluated other time, only on /create URLs when processed by Drafts.&lt;/p&gt;
&lt;/blockquote&gt;
				</description>
			<source:outline text="Draft a Text Message for Later with Launch Center Pro 2.3" created="Thu, 19 Jun 2014 16:35:06 GMT" type="outline" name="draftsATextMessageForLaterWithLaunchCenterPro23" >
				<source:outline text="Tweet This Post" created="Thu, 19 Jun 2014 16:59:36 GMT" type="link" url="https://twitter.com/share?text=Draft%20a%20Text%20Message%20for%20Later%20with%20Launch%20Center%20Pro%202.3&amp;url=http://blog.jeffreykishner.com/2014/06/19/draftsATextMessageForLaterWithLaunchCenterPro23.html" icon="twitter-sign" name="tweetThisPost" />
				<source:outline text="I've written a [previous post](http://blog.jeffreykishner.com/2014/01/10/schedule-a-text-x-minutes-from-now-with-due-and-launch-center-pro.html) on how to schedule a text message for later with &quot;Due App&quot; and &quot;Launch Center Pro&quot;. However, now that LCP's encoding grammar has simplified, I'd like to revisit the topic. First off, an action to save a text in &quot;Drafts&quot;:" created="Thu, 19 Jun 2014 16:35:22 GMT" name="iveWrittenAPreviousPosthttpblogjeffreykishnercom20140110scheduleatextxminutesfromnowwithdueandlaunchcenterprohtmlOnHowToScheduleATextMessageForLaterWithDueAppAndLaunchCenterProHoweverNowThat" />
				<source:outline text="    drafts://x-callback-url/create?text={{launch://messaging?to=8005551212&amp;body=[prompt]}}" created="Thu, 19 Jun 2014 16:35:24 GMT" name="Draftsxcallbackurlcreatetextlaunchmessagingtocontactbodyprompt" />
				<source:outline text="Click on [this link](launch://import?url=drafts%3A%2F%2Fx-callback-url%2Fcreate%3Ftext%3D%7B%7Blaunch%3A%2F%2Fmessaging%3Fto%3D8005551212%26body%3D%5Bprompt%5D%7D%7D&amp;title=Draft%20SMS) to import it onto your iOS device." created="Thu, 19 Jun 2014 16:38:14 GMT" name="clickOn" />
				<source:outline text="Tap on the action, enter your text message, and an encoded `launch://messaging` URL scheme is saved in Drafts. When you are ready to send the text message, just make links clickable and tap on the URL scheme. It will open the text message in Messages to the designated recipient (change 8005551212 to his or her cell number)." created="Thu, 19 Jun 2014 16:40:02 GMT" name="tapOnTheActionEnterYourTextMessageAndAnEncodedLaunchmessagingUrlSchemeIsSavedInDraftsWhenYouAreReadyToSendTheTextMessageJustMakeLinksClickableAndTapOnTheUrlSchemeItWillOpen" />
				<source:outline text="###The Contact Picker" created="Thu, 19 Jun 2014 16:41:31 GMT" />
				<source:outline text="LCP now has a contact picker -- [contact] -- that will allow you to choose a contact when you start the action. I tried creating the action above by substituting the phone number with [contact] -- the action can be imported  [here](https://launchcenterpro.com/z84h43) -- but it does not work." created="Thu, 19 Jun 2014 16:41:48 GMT" name="lcpNowHasAContactPickerContactThatWillAllowYouToChooseAContactWhenYouStartTheAction" />
				<source:outline text="    drafts://x-callback-url/create?text={{launch://messaging?to=[contact]&amp;body=[prompt]}}" created="Thu, 19 Jun 2014 16:41:35 GMT" />
				<source:outline text="The problem is that the body text is not encoded, so you get something like this:" created="Thu, 19 Jun 2014 16:46:12 GMT" name="theProblemIsThatThe" />
				<source:outline text="&amp;nbsp;" created="Thu, 19 Jun 2014 16:48:46 GMT" />
				<source:outline text="![](https://dl.dropbox.com/s/k8163te96f3kbk5/jk2dy.png)" created="Thu, 19 Jun 2014 16:48:13 GMT" />
				<source:outline text="_Screenshot by @tahewett_" created="Thu, 19 Jun 2014 16:48:17 GMT" name="screenshotBy" />
				<source:outline text="&amp;nbsp;" created="Thu, 19 Jun 2014 16:48:40 GMT" />
				<source:outline text="I could not figure out how to fix this, so I wrote a pretty complicated action that _does_ do the job. (Import it [here](https://launchcenterpro.com/f11cgt))." created="Thu, 19 Jun 2014 16:48:51 GMT" />
				<source:outline text="    launch://x-callback-url/clipboard?text=[contact]&amp;x-success={{texttool://x-callback-url/transform?text=[prompt:your message]&amp;method=encode&amp;clipboard=0&amp;x-success={{drafts:///create?text={{launch://messaging?to=||clipboard||&amp;body=[[output]]}}}}}}" created="Thu, 19 Jun 2014 16:49:15 GMT" />
				<source:outline text="####How It Works" created="Thu, 19 Jun 2014 16:49:57 GMT" />
				<source:outline text="First, the action asks you to pick a contact, and the number you choose is saved to the clipboard. " created="Thu, 19 Jun 2014 16:53:33 GMT" name="first" />
				<source:outline text="Then the action prompts you to enter your message. &quot;TextTool&quot; url-encodes your message, but does not save it to the clipboard (because we need the clipboard for the contact's number)." created="Thu, 19 Jun 2014 16:54:03 GMT" name="then" />
				<source:outline text="Then the action tells Drafts to create a new draft, the `launch://messaging` action. The body of the message is the [output] value carried from TextTool, and the `to` field is the clipboard contents, which -- because it has carried over two different x-successes -- needs to use `||clipboard||` to work, as explained [here](http://agiletortoise.com/blog/2014/02/13/updates-drafts/):" created="Thu, 19 Jun 2014 16:55:05 GMT" name="thenTheActionTellsDraftsToCreateANewDraft" />
				<source:outline text="&gt; /create URL scheme now supports a special “||clipboard||” tag within the text parameter, which will substitute the contents of the clipboard at the time the “create” URL is opened. This can be used in an x-success callback URL to allow capture of a clipboard value that changed before returning to Drafts. Note the pipe characters, not brackets. This tag is not evaluated other time, only on /create URLs when processed by Drafts." created="Thu, 19 Jun 2014 16:52:52 GMT" name="CreateUrlSchemeNowSupportsASpecialClipboardTagWithinTheTextParameterWhichWillSubstituteTheContentsOfTheClipboardAtTheTimeTheCreateUrlIsOpenedThisCanBeUsedInAnXsuccessCallbackUrlToAllowCaptureOfAClipboardValueThatChangedBeforeReturningToDraftsNoteThePipeCharactersNotBracketsThisTagIsNotEvaluatedOtherTimeOnlyOnCreateUrlsWhenProcessedByDrafts" />
				</source:outline>
			<pubDate>Thu, 19 Jun 2014 16:35:06 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/19/draftsATextMessageForLaterWithLaunchCenterPro23.html</guid>
			</item>
		<item>
			<title>How to Create an RSS Feed for an Instagram Profile</title>
			<link>http://blog.jeffreykishner.com/2014/06/18/howToCreateAnRssFeedForAnInstagramProfile.html</link>
			<description>
				&lt;p&gt;&lt;a href=&quot;https://twitter.com/share?text=How%20to%20Create%20an%20RSS%20Feed%20for%20an%20Instagram%20Profile&amp;amp;url=http://blog.jeffreykishner.com/2014/06/18/howToCreateAnRssFeedForAnInstagramProfile.html&quot; target=&quot;_blank&quot;&gt;Tweet This Post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jeffreykishner.com/simplepie/demo/?feed=https%3A%2F%2Ffeeds.pinboard.in%2Frss%2Fu%3Akishner%2Ft%3Anewyorkcity_instagram&quot;&gt;Here&lt;/a&gt; is an example of an RSS feed for &lt;a href=&quot;http://instagram.com/newyorkcity&quot;&gt;@newyorkcity&lt;/a&gt;. If you click on a link, you get to see the raw image. How I did it:&lt;/p&gt;

&lt;h3&gt;1. Use this IFTTT Recipe&lt;/h3&gt;

&lt;p&gt;Customize &lt;a href=&quot;https://ifttt.com/recipes/183648-tag-new-instagram-photos-in-pinboard&quot;&gt;this IFTTT recipe&lt;/a&gt; with the Instagram profile you want to use, as well as the tag(s) you want. (Note: this recipe requires a &lt;a href=&quot;http://pinboard.in&quot;&gt;Pinboard&lt;/a&gt; account, which requires a one-time fee.)&lt;/p&gt;

&lt;h3&gt;2. Wait Until the Recipe Has Been Triggered&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://pinboard.in/u%3akishner/t%3anewyorkcity_instagram&quot;&gt;Here&lt;/a&gt; is the &lt;code&gt;newyorkcity_instagram&lt;/code&gt; tag for my Pinboard account. To get the RSS feed, I follow &lt;a href=&quot;https://pinboard.in/howto/#rss&quot;&gt;these instructions&lt;/a&gt; to get the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://feeds.pinboard.in/rss/u:kishner/t:newyorkcity_instagram
&lt;/code&gt;&lt;/pre&gt;
				</description>
			<source:outline text="How to Create an RSS Feed for an Instagram Profile" created="Wed, 18 Jun 2014 19:46:43 GMT" type="outline" name="howToCreateAnRssFeedForAnInstagramProfile" >
				<source:outline text="Tweet This Post" created="Wed, 18 Jun 2014 20:05:47 GMT" type="link" url="https://twitter.com/share?text=How%20to%20Create%20an%20RSS%20Feed%20for%20an%20Instagram%20Profile&amp;url=http://blog.jeffreykishner.com/2014/06/18/howToCreateAnRssFeedForAnInstagramProfile.html" icon="twitter-sign" name="tweetThisPost" />
				<source:outline text="[Here](http://jeffreykishner.com/simplepie/demo/?feed=https%3A%2F%2Ffeeds.pinboard.in%2Frss%2Fu%3Akishner%2Ft%3Anewyorkcity_instagram) is an example of an RSS feed for [@newyorkcity](http://instagram.com/newyorkcity). If you click on a link, you get to see the raw image. How I did it:" created="Wed, 18 Jun 2014 19:50:08 GMT" />
				<source:outline text="###1. Use this IFTTT Recipe" created="Wed, 18 Jun 2014 19:51:15 GMT" />
				<source:outline text="Customize [this IFTTT recipe](https://ifttt.com/recipes/183648-tag-new-instagram-photos-in-pinboard) with the Instagram profile you want to use, as well as the tag(s) you want. (Note: this recipe requires a [Pinboard](http://pinboard.in) account, which requires a one-time fee.)" created="Wed, 18 Jun 2014 19:51:28 GMT" />
				<source:outline text="###2. Wait Until the Recipe Has Been Triggered " created="Wed, 18 Jun 2014 20:02:35 GMT" />
				<source:outline text="[Here](https://pinboard.in/u:kishner/t:newyorkcity_instagram) is the `newyorkcity_instagram` tag for my Pinboard account. To get the RSS feed, I follow [these instructions](https://pinboard.in/howto/#rss) to get the following:" created="Wed, 18 Jun 2014 20:03:08 GMT" />
				<source:outline text="    https://feeds.pinboard.in/rss/u:kishner/t:newyorkcity_instagram" created="Wed, 18 Jun 2014 20:04:26 GMT" />
				</source:outline>
			<pubDate>Wed, 18 Jun 2014 19:46:43 GMT</pubDate>
			<guid>http://blog.jeffreykishner.com/2014/06/18/howToCreateAnRssFeedForAnInstagramProfile.html</guid>
			</item>
		</channel>
	</rss>
